// Code generated by go-swagger; DO NOT EDIT.

package group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// NewUpdateUserAttributeGroupValueParams creates a new UpdateUserAttributeGroupValueParams object
// with the default values initialized.
func NewUpdateUserAttributeGroupValueParams() *UpdateUserAttributeGroupValueParams {
	var ()
	return &UpdateUserAttributeGroupValueParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateUserAttributeGroupValueParamsWithTimeout creates a new UpdateUserAttributeGroupValueParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateUserAttributeGroupValueParamsWithTimeout(timeout time.Duration) *UpdateUserAttributeGroupValueParams {
	var ()
	return &UpdateUserAttributeGroupValueParams{

		timeout: timeout,
	}
}

// NewUpdateUserAttributeGroupValueParamsWithContext creates a new UpdateUserAttributeGroupValueParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateUserAttributeGroupValueParamsWithContext(ctx context.Context) *UpdateUserAttributeGroupValueParams {
	var ()
	return &UpdateUserAttributeGroupValueParams{

		Context: ctx,
	}
}

// NewUpdateUserAttributeGroupValueParamsWithHTTPClient creates a new UpdateUserAttributeGroupValueParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateUserAttributeGroupValueParamsWithHTTPClient(client *http.Client) *UpdateUserAttributeGroupValueParams {
	var ()
	return &UpdateUserAttributeGroupValueParams{
		HTTPClient: client,
	}
}

/*UpdateUserAttributeGroupValueParams contains all the parameters to send to the API endpoint
for the update user attribute group value operation typically these are written to a http.Request
*/
type UpdateUserAttributeGroupValueParams struct {

	/*Body
	  New value for group.

	*/
	Body *models.UserAttributeGroupValue
	/*GroupID
	  Id of group

	*/
	GroupID int64
	/*UserAttributeID
	  Id of user attribute

	*/
	UserAttributeID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update user attribute group value params
func (o *UpdateUserAttributeGroupValueParams) WithTimeout(timeout time.Duration) *UpdateUserAttributeGroupValueParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update user attribute group value params
func (o *UpdateUserAttributeGroupValueParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update user attribute group value params
func (o *UpdateUserAttributeGroupValueParams) WithContext(ctx context.Context) *UpdateUserAttributeGroupValueParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update user attribute group value params
func (o *UpdateUserAttributeGroupValueParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update user attribute group value params
func (o *UpdateUserAttributeGroupValueParams) WithHTTPClient(client *http.Client) *UpdateUserAttributeGroupValueParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update user attribute group value params
func (o *UpdateUserAttributeGroupValueParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update user attribute group value params
func (o *UpdateUserAttributeGroupValueParams) WithBody(body *models.UserAttributeGroupValue) *UpdateUserAttributeGroupValueParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update user attribute group value params
func (o *UpdateUserAttributeGroupValueParams) SetBody(body *models.UserAttributeGroupValue) {
	o.Body = body
}

// WithGroupID adds the groupID to the update user attribute group value params
func (o *UpdateUserAttributeGroupValueParams) WithGroupID(groupID int64) *UpdateUserAttributeGroupValueParams {
	o.SetGroupID(groupID)
	return o
}

// SetGroupID adds the groupId to the update user attribute group value params
func (o *UpdateUserAttributeGroupValueParams) SetGroupID(groupID int64) {
	o.GroupID = groupID
}

// WithUserAttributeID adds the userAttributeID to the update user attribute group value params
func (o *UpdateUserAttributeGroupValueParams) WithUserAttributeID(userAttributeID int64) *UpdateUserAttributeGroupValueParams {
	o.SetUserAttributeID(userAttributeID)
	return o
}

// SetUserAttributeID adds the userAttributeId to the update user attribute group value params
func (o *UpdateUserAttributeGroupValueParams) SetUserAttributeID(userAttributeID int64) {
	o.UserAttributeID = userAttributeID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateUserAttributeGroupValueParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param group_id
	if err := r.SetPathParam("group_id", swag.FormatInt64(o.GroupID)); err != nil {
		return err
	}

	// path param user_attribute_id
	if err := r.SetPathParam("user_attribute_id", swag.FormatInt64(o.UserAttributeID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
