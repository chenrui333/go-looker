// Code generated by go-swagger; DO NOT EDIT.

package group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// SearchGroupsReader is a Reader for the SearchGroups structure.
type SearchGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchGroupsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSearchGroupsOK creates a SearchGroupsOK with default headers values
func NewSearchGroupsOK() *SearchGroupsOK {
	return &SearchGroupsOK{}
}

/*SearchGroupsOK handles this case with default header values.

Group
*/
type SearchGroupsOK struct {
	Payload []*models.Group
}

func (o *SearchGroupsOK) Error() string {
	return fmt.Sprintf("[GET /groups/search][%d] searchGroupsOK  %+v", 200, o.Payload)
}

func (o *SearchGroupsOK) GetPayload() []*models.Group {
	return o.Payload
}

func (o *SearchGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchGroupsBadRequest creates a SearchGroupsBadRequest with default headers values
func NewSearchGroupsBadRequest() *SearchGroupsBadRequest {
	return &SearchGroupsBadRequest{}
}

/*SearchGroupsBadRequest handles this case with default header values.

Bad Request
*/
type SearchGroupsBadRequest struct {
	Payload *models.Error
}

func (o *SearchGroupsBadRequest) Error() string {
	return fmt.Sprintf("[GET /groups/search][%d] searchGroupsBadRequest  %+v", 400, o.Payload)
}

func (o *SearchGroupsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchGroupsNotFound creates a SearchGroupsNotFound with default headers values
func NewSearchGroupsNotFound() *SearchGroupsNotFound {
	return &SearchGroupsNotFound{}
}

/*SearchGroupsNotFound handles this case with default header values.

Not Found
*/
type SearchGroupsNotFound struct {
	Payload *models.Error
}

func (o *SearchGroupsNotFound) Error() string {
	return fmt.Sprintf("[GET /groups/search][%d] searchGroupsNotFound  %+v", 404, o.Payload)
}

func (o *SearchGroupsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchGroupsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
