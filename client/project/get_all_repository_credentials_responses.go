// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// GetAllRepositoryCredentialsReader is a Reader for the GetAllRepositoryCredentials structure.
type GetAllRepositoryCredentialsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllRepositoryCredentialsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllRepositoryCredentialsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllRepositoryCredentialsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllRepositoryCredentialsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAllRepositoryCredentialsOK creates a GetAllRepositoryCredentialsOK with default headers values
func NewGetAllRepositoryCredentialsOK() *GetAllRepositoryCredentialsOK {
	return &GetAllRepositoryCredentialsOK{}
}

/*GetAllRepositoryCredentialsOK handles this case with default header values.

Repository Credential
*/
type GetAllRepositoryCredentialsOK struct {
	Payload []*models.RepositoryCredential
}

func (o *GetAllRepositoryCredentialsOK) Error() string {
	return fmt.Sprintf("[GET /projects/{root_project_id}/credentials][%d] getAllRepositoryCredentialsOK  %+v", 200, o.Payload)
}

func (o *GetAllRepositoryCredentialsOK) GetPayload() []*models.RepositoryCredential {
	return o.Payload
}

func (o *GetAllRepositoryCredentialsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllRepositoryCredentialsBadRequest creates a GetAllRepositoryCredentialsBadRequest with default headers values
func NewGetAllRepositoryCredentialsBadRequest() *GetAllRepositoryCredentialsBadRequest {
	return &GetAllRepositoryCredentialsBadRequest{}
}

/*GetAllRepositoryCredentialsBadRequest handles this case with default header values.

Bad Request
*/
type GetAllRepositoryCredentialsBadRequest struct {
	Payload *models.Error
}

func (o *GetAllRepositoryCredentialsBadRequest) Error() string {
	return fmt.Sprintf("[GET /projects/{root_project_id}/credentials][%d] getAllRepositoryCredentialsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAllRepositoryCredentialsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllRepositoryCredentialsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllRepositoryCredentialsNotFound creates a GetAllRepositoryCredentialsNotFound with default headers values
func NewGetAllRepositoryCredentialsNotFound() *GetAllRepositoryCredentialsNotFound {
	return &GetAllRepositoryCredentialsNotFound{}
}

/*GetAllRepositoryCredentialsNotFound handles this case with default header values.

Not Found
*/
type GetAllRepositoryCredentialsNotFound struct {
	Payload *models.Error
}

func (o *GetAllRepositoryCredentialsNotFound) Error() string {
	return fmt.Sprintf("[GET /projects/{root_project_id}/credentials][%d] getAllRepositoryCredentialsNotFound  %+v", 404, o.Payload)
}

func (o *GetAllRepositoryCredentialsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllRepositoryCredentialsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
