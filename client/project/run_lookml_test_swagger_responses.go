// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// RunLookmlTestReader is a Reader for the RunLookmlTest structure.
type RunLookmlTestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RunLookmlTestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRunLookmlTestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRunLookmlTestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRunLookmlTestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewRunLookmlTestUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRunLookmlTestOK creates a RunLookmlTestOK with default headers values
func NewRunLookmlTestOK() *RunLookmlTestOK {
	return &RunLookmlTestOK{}
}

/*RunLookmlTestOK handles this case with default header values.

LookML Test Results
*/
type RunLookmlTestOK struct {
	Payload []*models.LookmlTestResult
}

func (o *RunLookmlTestOK) Error() string {
	return fmt.Sprintf("[GET /projects/{project_id}/lookml_tests/run][%d] runLookmlTestOK  %+v", 200, o.Payload)
}

func (o *RunLookmlTestOK) GetPayload() []*models.LookmlTestResult {
	return o.Payload
}

func (o *RunLookmlTestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunLookmlTestBadRequest creates a RunLookmlTestBadRequest with default headers values
func NewRunLookmlTestBadRequest() *RunLookmlTestBadRequest {
	return &RunLookmlTestBadRequest{}
}

/*RunLookmlTestBadRequest handles this case with default header values.

Bad Request
*/
type RunLookmlTestBadRequest struct {
	Payload *models.Error
}

func (o *RunLookmlTestBadRequest) Error() string {
	return fmt.Sprintf("[GET /projects/{project_id}/lookml_tests/run][%d] runLookmlTestBadRequest  %+v", 400, o.Payload)
}

func (o *RunLookmlTestBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RunLookmlTestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunLookmlTestNotFound creates a RunLookmlTestNotFound with default headers values
func NewRunLookmlTestNotFound() *RunLookmlTestNotFound {
	return &RunLookmlTestNotFound{}
}

/*RunLookmlTestNotFound handles this case with default header values.

Not Found
*/
type RunLookmlTestNotFound struct {
	Payload *models.Error
}

func (o *RunLookmlTestNotFound) Error() string {
	return fmt.Sprintf("[GET /projects/{project_id}/lookml_tests/run][%d] runLookmlTestNotFound  %+v", 404, o.Payload)
}

func (o *RunLookmlTestNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RunLookmlTestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunLookmlTestUnprocessableEntity creates a RunLookmlTestUnprocessableEntity with default headers values
func NewRunLookmlTestUnprocessableEntity() *RunLookmlTestUnprocessableEntity {
	return &RunLookmlTestUnprocessableEntity{}
}

/*RunLookmlTestUnprocessableEntity handles this case with default header values.

Validation Error
*/
type RunLookmlTestUnprocessableEntity struct {
	Payload *models.ValidationError
}

func (o *RunLookmlTestUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /projects/{project_id}/lookml_tests/run][%d] runLookmlTestUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *RunLookmlTestUnprocessableEntity) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *RunLookmlTestUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
