// Code generated by go-swagger; DO NOT EDIT.

package space

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// SearchSpacesReader is a Reader for the SearchSpaces structure.
type SearchSpacesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchSpacesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSearchSpacesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSearchSpacesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSearchSpacesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSearchSpacesOK creates a SearchSpacesOK with default headers values
func NewSearchSpacesOK() *SearchSpacesOK {
	return &SearchSpacesOK{}
}

/*SearchSpacesOK handles this case with default header values.

spaces
*/
type SearchSpacesOK struct {
	Payload []*models.Space
}

func (o *SearchSpacesOK) Error() string {
	return fmt.Sprintf("[GET /spaces/search][%d] searchSpacesOK  %+v", 200, o.Payload)
}

func (o *SearchSpacesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchSpacesBadRequest creates a SearchSpacesBadRequest with default headers values
func NewSearchSpacesBadRequest() *SearchSpacesBadRequest {
	return &SearchSpacesBadRequest{}
}

/*SearchSpacesBadRequest handles this case with default header values.

Bad Request
*/
type SearchSpacesBadRequest struct {
	Payload *models.Error
}

func (o *SearchSpacesBadRequest) Error() string {
	return fmt.Sprintf("[GET /spaces/search][%d] searchSpacesBadRequest  %+v", 400, o.Payload)
}

func (o *SearchSpacesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchSpacesNotFound creates a SearchSpacesNotFound with default headers values
func NewSearchSpacesNotFound() *SearchSpacesNotFound {
	return &SearchSpacesNotFound{}
}

/*SearchSpacesNotFound handles this case with default header values.

Not Found
*/
type SearchSpacesNotFound struct {
	Payload *models.Error
}

func (o *SearchSpacesNotFound) Error() string {
	return fmt.Sprintf("[GET /spaces/search][%d] searchSpacesNotFound  %+v", 404, o.Payload)
}

func (o *SearchSpacesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
