// Code generated by go-swagger; DO NOT EDIT.

package scheduled_plan

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// ScheduledPlanReader is a Reader for the ScheduledPlan structure.
type ScheduledPlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ScheduledPlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewScheduledPlanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewScheduledPlanBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewScheduledPlanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewScheduledPlanOK creates a ScheduledPlanOK with default headers values
func NewScheduledPlanOK() *ScheduledPlanOK {
	return &ScheduledPlanOK{}
}

/*ScheduledPlanOK handles this case with default header values.

Scheduled Plan
*/
type ScheduledPlanOK struct {
	Payload *models.ScheduledPlan
}

func (o *ScheduledPlanOK) Error() string {
	return fmt.Sprintf("[GET /scheduled_plans/{scheduled_plan_id}][%d] scheduledPlanOK  %+v", 200, o.Payload)
}

func (o *ScheduledPlanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ScheduledPlan)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScheduledPlanBadRequest creates a ScheduledPlanBadRequest with default headers values
func NewScheduledPlanBadRequest() *ScheduledPlanBadRequest {
	return &ScheduledPlanBadRequest{}
}

/*ScheduledPlanBadRequest handles this case with default header values.

Bad Request
*/
type ScheduledPlanBadRequest struct {
	Payload *models.Error
}

func (o *ScheduledPlanBadRequest) Error() string {
	return fmt.Sprintf("[GET /scheduled_plans/{scheduled_plan_id}][%d] scheduledPlanBadRequest  %+v", 400, o.Payload)
}

func (o *ScheduledPlanBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScheduledPlanNotFound creates a ScheduledPlanNotFound with default headers values
func NewScheduledPlanNotFound() *ScheduledPlanNotFound {
	return &ScheduledPlanNotFound{}
}

/*ScheduledPlanNotFound handles this case with default header values.

Not Found
*/
type ScheduledPlanNotFound struct {
	Payload *models.Error
}

func (o *ScheduledPlanNotFound) Error() string {
	return fmt.Sprintf("[GET /scheduled_plans/{scheduled_plan_id}][%d] scheduledPlanNotFound  %+v", 404, o.Payload)
}

func (o *ScheduledPlanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
