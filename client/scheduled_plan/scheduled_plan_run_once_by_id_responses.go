// Code generated by go-swagger; DO NOT EDIT.

package scheduled_plan

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// ScheduledPlanRunOnceByIDReader is a Reader for the ScheduledPlanRunOnceByID structure.
type ScheduledPlanRunOnceByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ScheduledPlanRunOnceByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewScheduledPlanRunOnceByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewScheduledPlanRunOnceByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewScheduledPlanRunOnceByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewScheduledPlanRunOnceByIDUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewScheduledPlanRunOnceByIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewScheduledPlanRunOnceByIDOK creates a ScheduledPlanRunOnceByIDOK with default headers values
func NewScheduledPlanRunOnceByIDOK() *ScheduledPlanRunOnceByIDOK {
	return &ScheduledPlanRunOnceByIDOK{}
}

/*ScheduledPlanRunOnceByIDOK handles this case with default header values.

Scheduled Plan
*/
type ScheduledPlanRunOnceByIDOK struct {
	Payload *models.ScheduledPlan
}

func (o *ScheduledPlanRunOnceByIDOK) Error() string {
	return fmt.Sprintf("[POST /scheduled_plans/{scheduled_plan_id}/run_once][%d] scheduledPlanRunOnceByIdOK  %+v", 200, o.Payload)
}

func (o *ScheduledPlanRunOnceByIDOK) GetPayload() *models.ScheduledPlan {
	return o.Payload
}

func (o *ScheduledPlanRunOnceByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ScheduledPlan)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScheduledPlanRunOnceByIDBadRequest creates a ScheduledPlanRunOnceByIDBadRequest with default headers values
func NewScheduledPlanRunOnceByIDBadRequest() *ScheduledPlanRunOnceByIDBadRequest {
	return &ScheduledPlanRunOnceByIDBadRequest{}
}

/*ScheduledPlanRunOnceByIDBadRequest handles this case with default header values.

Bad Request
*/
type ScheduledPlanRunOnceByIDBadRequest struct {
	Payload *models.Error
}

func (o *ScheduledPlanRunOnceByIDBadRequest) Error() string {
	return fmt.Sprintf("[POST /scheduled_plans/{scheduled_plan_id}/run_once][%d] scheduledPlanRunOnceByIdBadRequest  %+v", 400, o.Payload)
}

func (o *ScheduledPlanRunOnceByIDBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ScheduledPlanRunOnceByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScheduledPlanRunOnceByIDNotFound creates a ScheduledPlanRunOnceByIDNotFound with default headers values
func NewScheduledPlanRunOnceByIDNotFound() *ScheduledPlanRunOnceByIDNotFound {
	return &ScheduledPlanRunOnceByIDNotFound{}
}

/*ScheduledPlanRunOnceByIDNotFound handles this case with default header values.

Not Found
*/
type ScheduledPlanRunOnceByIDNotFound struct {
	Payload *models.Error
}

func (o *ScheduledPlanRunOnceByIDNotFound) Error() string {
	return fmt.Sprintf("[POST /scheduled_plans/{scheduled_plan_id}/run_once][%d] scheduledPlanRunOnceByIdNotFound  %+v", 404, o.Payload)
}

func (o *ScheduledPlanRunOnceByIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ScheduledPlanRunOnceByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScheduledPlanRunOnceByIDUnprocessableEntity creates a ScheduledPlanRunOnceByIDUnprocessableEntity with default headers values
func NewScheduledPlanRunOnceByIDUnprocessableEntity() *ScheduledPlanRunOnceByIDUnprocessableEntity {
	return &ScheduledPlanRunOnceByIDUnprocessableEntity{}
}

/*ScheduledPlanRunOnceByIDUnprocessableEntity handles this case with default header values.

Validation Error
*/
type ScheduledPlanRunOnceByIDUnprocessableEntity struct {
	Payload *models.ValidationError
}

func (o *ScheduledPlanRunOnceByIDUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /scheduled_plans/{scheduled_plan_id}/run_once][%d] scheduledPlanRunOnceByIdUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *ScheduledPlanRunOnceByIDUnprocessableEntity) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *ScheduledPlanRunOnceByIDUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScheduledPlanRunOnceByIDTooManyRequests creates a ScheduledPlanRunOnceByIDTooManyRequests with default headers values
func NewScheduledPlanRunOnceByIDTooManyRequests() *ScheduledPlanRunOnceByIDTooManyRequests {
	return &ScheduledPlanRunOnceByIDTooManyRequests{}
}

/*ScheduledPlanRunOnceByIDTooManyRequests handles this case with default header values.

Too Many Requests
*/
type ScheduledPlanRunOnceByIDTooManyRequests struct {
	Payload *models.Error
}

func (o *ScheduledPlanRunOnceByIDTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /scheduled_plans/{scheduled_plan_id}/run_once][%d] scheduledPlanRunOnceByIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *ScheduledPlanRunOnceByIDTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ScheduledPlanRunOnceByIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
