// Code generated by go-swagger; DO NOT EDIT.

package dashboard

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// SearchDashboardsReader is a Reader for the SearchDashboards structure.
type SearchDashboardsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchDashboardsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSearchDashboardsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSearchDashboardsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSearchDashboardsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSearchDashboardsOK creates a SearchDashboardsOK with default headers values
func NewSearchDashboardsOK() *SearchDashboardsOK {
	return &SearchDashboardsOK{}
}

/*SearchDashboardsOK handles this case with default header values.

dashboards
*/
type SearchDashboardsOK struct {
	Payload []*models.Dashboard
}

func (o *SearchDashboardsOK) Error() string {
	return fmt.Sprintf("[GET /dashboards/search][%d] searchDashboardsOK  %+v", 200, o.Payload)
}

func (o *SearchDashboardsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchDashboardsBadRequest creates a SearchDashboardsBadRequest with default headers values
func NewSearchDashboardsBadRequest() *SearchDashboardsBadRequest {
	return &SearchDashboardsBadRequest{}
}

/*SearchDashboardsBadRequest handles this case with default header values.

Bad Request
*/
type SearchDashboardsBadRequest struct {
	Payload *models.Error
}

func (o *SearchDashboardsBadRequest) Error() string {
	return fmt.Sprintf("[GET /dashboards/search][%d] searchDashboardsBadRequest  %+v", 400, o.Payload)
}

func (o *SearchDashboardsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchDashboardsNotFound creates a SearchDashboardsNotFound with default headers values
func NewSearchDashboardsNotFound() *SearchDashboardsNotFound {
	return &SearchDashboardsNotFound{}
}

/*SearchDashboardsNotFound handles this case with default header values.

Not Found
*/
type SearchDashboardsNotFound struct {
	Payload *models.Error
}

func (o *SearchDashboardsNotFound) Error() string {
	return fmt.Sprintf("[GET /dashboards/search][%d] searchDashboardsNotFound  %+v", 404, o.Payload)
}

func (o *SearchDashboardsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
