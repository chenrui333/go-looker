// Code generated by go-swagger; DO NOT EDIT.

package dashboard

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// DashboardElementReader is a Reader for the DashboardElement structure.
type DashboardElementReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DashboardElementReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDashboardElementOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDashboardElementBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDashboardElementNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDashboardElementOK creates a DashboardElementOK with default headers values
func NewDashboardElementOK() *DashboardElementOK {
	return &DashboardElementOK{}
}

/*DashboardElementOK handles this case with default header values.

DashboardElement
*/
type DashboardElementOK struct {
	Payload *models.DashboardElement
}

func (o *DashboardElementOK) Error() string {
	return fmt.Sprintf("[GET /dashboard_elements/{dashboard_element_id}][%d] dashboardElementOK  %+v", 200, o.Payload)
}

func (o *DashboardElementOK) GetPayload() *models.DashboardElement {
	return o.Payload
}

func (o *DashboardElementOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DashboardElement)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDashboardElementBadRequest creates a DashboardElementBadRequest with default headers values
func NewDashboardElementBadRequest() *DashboardElementBadRequest {
	return &DashboardElementBadRequest{}
}

/*DashboardElementBadRequest handles this case with default header values.

Bad Request
*/
type DashboardElementBadRequest struct {
	Payload *models.Error
}

func (o *DashboardElementBadRequest) Error() string {
	return fmt.Sprintf("[GET /dashboard_elements/{dashboard_element_id}][%d] dashboardElementBadRequest  %+v", 400, o.Payload)
}

func (o *DashboardElementBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DashboardElementBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDashboardElementNotFound creates a DashboardElementNotFound with default headers values
func NewDashboardElementNotFound() *DashboardElementNotFound {
	return &DashboardElementNotFound{}
}

/*DashboardElementNotFound handles this case with default header values.

Not Found
*/
type DashboardElementNotFound struct {
	Payload *models.Error
}

func (o *DashboardElementNotFound) Error() string {
	return fmt.Sprintf("[GET /dashboard_elements/{dashboard_element_id}][%d] dashboardElementNotFound  %+v", 404, o.Payload)
}

func (o *DashboardElementNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DashboardElementNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
