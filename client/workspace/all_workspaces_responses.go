// Code generated by go-swagger; DO NOT EDIT.

package workspace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// AllWorkspacesReader is a Reader for the AllWorkspaces structure.
type AllWorkspacesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AllWorkspacesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAllWorkspacesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAllWorkspacesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAllWorkspacesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAllWorkspacesOK creates a AllWorkspacesOK with default headers values
func NewAllWorkspacesOK() *AllWorkspacesOK {
	return &AllWorkspacesOK{}
}

/*AllWorkspacesOK handles this case with default header values.

Workspace
*/
type AllWorkspacesOK struct {
	Payload []*models.Workspace
}

func (o *AllWorkspacesOK) Error() string {
	return fmt.Sprintf("[GET /workspaces][%d] allWorkspacesOK  %+v", 200, o.Payload)
}

func (o *AllWorkspacesOK) GetPayload() []*models.Workspace {
	return o.Payload
}

func (o *AllWorkspacesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAllWorkspacesBadRequest creates a AllWorkspacesBadRequest with default headers values
func NewAllWorkspacesBadRequest() *AllWorkspacesBadRequest {
	return &AllWorkspacesBadRequest{}
}

/*AllWorkspacesBadRequest handles this case with default header values.

Bad Request
*/
type AllWorkspacesBadRequest struct {
	Payload *models.Error
}

func (o *AllWorkspacesBadRequest) Error() string {
	return fmt.Sprintf("[GET /workspaces][%d] allWorkspacesBadRequest  %+v", 400, o.Payload)
}

func (o *AllWorkspacesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *AllWorkspacesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAllWorkspacesNotFound creates a AllWorkspacesNotFound with default headers values
func NewAllWorkspacesNotFound() *AllWorkspacesNotFound {
	return &AllWorkspacesNotFound{}
}

/*AllWorkspacesNotFound handles this case with default header values.

Not Found
*/
type AllWorkspacesNotFound struct {
	Payload *models.Error
}

func (o *AllWorkspacesNotFound) Error() string {
	return fmt.Sprintf("[GET /workspaces][%d] allWorkspacesNotFound  %+v", 404, o.Payload)
}

func (o *AllWorkspacesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *AllWorkspacesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
