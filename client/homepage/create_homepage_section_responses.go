// Code generated by go-swagger; DO NOT EDIT.

package homepage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// CreateHomepageSectionReader is a Reader for the CreateHomepageSection structure.
type CreateHomepageSectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateHomepageSectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateHomepageSectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateHomepageSectionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCreateHomepageSectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewCreateHomepageSectionConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewCreateHomepageSectionUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateHomepageSectionOK creates a CreateHomepageSectionOK with default headers values
func NewCreateHomepageSectionOK() *CreateHomepageSectionOK {
	return &CreateHomepageSectionOK{}
}

/*CreateHomepageSectionOK handles this case with default header values.

Homepage section
*/
type CreateHomepageSectionOK struct {
	Payload *models.HomepageSection
}

func (o *CreateHomepageSectionOK) Error() string {
	return fmt.Sprintf("[POST /homepage_sections][%d] createHomepageSectionOK  %+v", 200, o.Payload)
}

func (o *CreateHomepageSectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HomepageSection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateHomepageSectionBadRequest creates a CreateHomepageSectionBadRequest with default headers values
func NewCreateHomepageSectionBadRequest() *CreateHomepageSectionBadRequest {
	return &CreateHomepageSectionBadRequest{}
}

/*CreateHomepageSectionBadRequest handles this case with default header values.

Bad Request
*/
type CreateHomepageSectionBadRequest struct {
	Payload *models.Error
}

func (o *CreateHomepageSectionBadRequest) Error() string {
	return fmt.Sprintf("[POST /homepage_sections][%d] createHomepageSectionBadRequest  %+v", 400, o.Payload)
}

func (o *CreateHomepageSectionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateHomepageSectionNotFound creates a CreateHomepageSectionNotFound with default headers values
func NewCreateHomepageSectionNotFound() *CreateHomepageSectionNotFound {
	return &CreateHomepageSectionNotFound{}
}

/*CreateHomepageSectionNotFound handles this case with default header values.

Not Found
*/
type CreateHomepageSectionNotFound struct {
	Payload *models.Error
}

func (o *CreateHomepageSectionNotFound) Error() string {
	return fmt.Sprintf("[POST /homepage_sections][%d] createHomepageSectionNotFound  %+v", 404, o.Payload)
}

func (o *CreateHomepageSectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateHomepageSectionConflict creates a CreateHomepageSectionConflict with default headers values
func NewCreateHomepageSectionConflict() *CreateHomepageSectionConflict {
	return &CreateHomepageSectionConflict{}
}

/*CreateHomepageSectionConflict handles this case with default header values.

Resource Already Exists
*/
type CreateHomepageSectionConflict struct {
	Payload *models.Error
}

func (o *CreateHomepageSectionConflict) Error() string {
	return fmt.Sprintf("[POST /homepage_sections][%d] createHomepageSectionConflict  %+v", 409, o.Payload)
}

func (o *CreateHomepageSectionConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateHomepageSectionUnprocessableEntity creates a CreateHomepageSectionUnprocessableEntity with default headers values
func NewCreateHomepageSectionUnprocessableEntity() *CreateHomepageSectionUnprocessableEntity {
	return &CreateHomepageSectionUnprocessableEntity{}
}

/*CreateHomepageSectionUnprocessableEntity handles this case with default header values.

Validation Error
*/
type CreateHomepageSectionUnprocessableEntity struct {
	Payload *models.ValidationError
}

func (o *CreateHomepageSectionUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /homepage_sections][%d] createHomepageSectionUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateHomepageSectionUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
