// Code generated by go-swagger; DO NOT EDIT.

package homepage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new homepage API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for homepage API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
AllHomepageItems gets all homepage items

### Get information about all homepage items.

*/
func (a *Client) AllHomepageItems(params *AllHomepageItemsParams) (*AllHomepageItemsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAllHomepageItemsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "all_homepage_items",
		Method:             "GET",
		PathPattern:        "/homepage_items",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AllHomepageItemsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*AllHomepageItemsOK), nil

}

/*
AllHomepageSections gets all homepage sections

### Get information about all homepage sections.

*/
func (a *Client) AllHomepageSections(params *AllHomepageSectionsParams) (*AllHomepageSectionsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAllHomepageSectionsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "all_homepage_sections",
		Method:             "GET",
		PathPattern:        "/homepage_sections",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AllHomepageSectionsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*AllHomepageSectionsOK), nil

}

/*
CreateHomepageItem creates homepage item

### Create a new homepage item.

*/
func (a *Client) CreateHomepageItem(params *CreateHomepageItemParams) (*CreateHomepageItemOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateHomepageItemParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "create_homepage_item",
		Method:             "POST",
		PathPattern:        "/homepage_items",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateHomepageItemReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CreateHomepageItemOK), nil

}

/*
CreateHomepageSection creates homepage section

### Create a new homepage section.

*/
func (a *Client) CreateHomepageSection(params *CreateHomepageSectionParams) (*CreateHomepageSectionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateHomepageSectionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "create_homepage_section",
		Method:             "POST",
		PathPattern:        "/homepage_sections",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateHomepageSectionReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CreateHomepageSectionOK), nil

}

/*
DeleteHomepageItem deletes homepage item

### Delete a homepage item.

*/
func (a *Client) DeleteHomepageItem(params *DeleteHomepageItemParams) (*DeleteHomepageItemNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteHomepageItemParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "delete_homepage_item",
		Method:             "DELETE",
		PathPattern:        "/homepage_items/{homepage_item_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteHomepageItemReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*DeleteHomepageItemNoContent), nil

}

/*
DeleteHomepageSection deletes homepage section

### Delete a homepage section.

*/
func (a *Client) DeleteHomepageSection(params *DeleteHomepageSectionParams) (*DeleteHomepageSectionNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteHomepageSectionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "delete_homepage_section",
		Method:             "DELETE",
		PathPattern:        "/homepage_sections/{homepage_section_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteHomepageSectionReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*DeleteHomepageSectionNoContent), nil

}

/*
HomepageItem gets homepage item

### Get information about a homepage item.

*/
func (a *Client) HomepageItem(params *HomepageItemParams) (*HomepageItemOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewHomepageItemParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "homepage_item",
		Method:             "GET",
		PathPattern:        "/homepage_items/{homepage_item_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &HomepageItemReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*HomepageItemOK), nil

}

/*
HomepageSection gets homepage section

### Get information about a homepage section.

*/
func (a *Client) HomepageSection(params *HomepageSectionParams) (*HomepageSectionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewHomepageSectionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "homepage_section",
		Method:             "GET",
		PathPattern:        "/homepage_sections/{homepage_section_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &HomepageSectionReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*HomepageSectionOK), nil

}

/*
UpdateHomepageItem updates homepage item

### Update a homepage item definition.

*/
func (a *Client) UpdateHomepageItem(params *UpdateHomepageItemParams) (*UpdateHomepageItemOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateHomepageItemParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "update_homepage_item",
		Method:             "PATCH",
		PathPattern:        "/homepage_items/{homepage_item_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateHomepageItemReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*UpdateHomepageItemOK), nil

}

/*
UpdateHomepageSection updates homepage section

### Update a homepage section definition.

*/
func (a *Client) UpdateHomepageSection(params *UpdateHomepageSectionParams) (*UpdateHomepageSectionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateHomepageSectionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "update_homepage_section",
		Method:             "PATCH",
		PathPattern:        "/homepage_sections/{homepage_section_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateHomepageSectionReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*UpdateHomepageSectionOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
