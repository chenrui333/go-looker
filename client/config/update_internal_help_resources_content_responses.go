// Code generated by go-swagger; DO NOT EDIT.

package config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// UpdateInternalHelpResourcesContentReader is a Reader for the UpdateInternalHelpResourcesContent structure.
type UpdateInternalHelpResourcesContentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateInternalHelpResourcesContentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateInternalHelpResourcesContentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateInternalHelpResourcesContentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateInternalHelpResourcesContentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateInternalHelpResourcesContentUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateInternalHelpResourcesContentOK creates a UpdateInternalHelpResourcesContentOK with default headers values
func NewUpdateInternalHelpResourcesContentOK() *UpdateInternalHelpResourcesContentOK {
	return &UpdateInternalHelpResourcesContentOK{}
}

/*UpdateInternalHelpResourcesContentOK handles this case with default header values.

Internal Help Resources Content
*/
type UpdateInternalHelpResourcesContentOK struct {
	Payload *models.InternalHelpResourcesContent
}

func (o *UpdateInternalHelpResourcesContentOK) Error() string {
	return fmt.Sprintf("[PATCH /internal_help_resources_content][%d] updateInternalHelpResourcesContentOK  %+v", 200, o.Payload)
}

func (o *UpdateInternalHelpResourcesContentOK) GetPayload() *models.InternalHelpResourcesContent {
	return o.Payload
}

func (o *UpdateInternalHelpResourcesContentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternalHelpResourcesContent)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateInternalHelpResourcesContentBadRequest creates a UpdateInternalHelpResourcesContentBadRequest with default headers values
func NewUpdateInternalHelpResourcesContentBadRequest() *UpdateInternalHelpResourcesContentBadRequest {
	return &UpdateInternalHelpResourcesContentBadRequest{}
}

/*UpdateInternalHelpResourcesContentBadRequest handles this case with default header values.

Bad Request
*/
type UpdateInternalHelpResourcesContentBadRequest struct {
	Payload *models.Error
}

func (o *UpdateInternalHelpResourcesContentBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /internal_help_resources_content][%d] updateInternalHelpResourcesContentBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateInternalHelpResourcesContentBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateInternalHelpResourcesContentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateInternalHelpResourcesContentNotFound creates a UpdateInternalHelpResourcesContentNotFound with default headers values
func NewUpdateInternalHelpResourcesContentNotFound() *UpdateInternalHelpResourcesContentNotFound {
	return &UpdateInternalHelpResourcesContentNotFound{}
}

/*UpdateInternalHelpResourcesContentNotFound handles this case with default header values.

Not Found
*/
type UpdateInternalHelpResourcesContentNotFound struct {
	Payload *models.Error
}

func (o *UpdateInternalHelpResourcesContentNotFound) Error() string {
	return fmt.Sprintf("[PATCH /internal_help_resources_content][%d] updateInternalHelpResourcesContentNotFound  %+v", 404, o.Payload)
}

func (o *UpdateInternalHelpResourcesContentNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateInternalHelpResourcesContentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateInternalHelpResourcesContentUnprocessableEntity creates a UpdateInternalHelpResourcesContentUnprocessableEntity with default headers values
func NewUpdateInternalHelpResourcesContentUnprocessableEntity() *UpdateInternalHelpResourcesContentUnprocessableEntity {
	return &UpdateInternalHelpResourcesContentUnprocessableEntity{}
}

/*UpdateInternalHelpResourcesContentUnprocessableEntity handles this case with default header values.

Validation Error
*/
type UpdateInternalHelpResourcesContentUnprocessableEntity struct {
	Payload *models.ValidationError
}

func (o *UpdateInternalHelpResourcesContentUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /internal_help_resources_content][%d] updateInternalHelpResourcesContentUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateInternalHelpResourcesContentUnprocessableEntity) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *UpdateInternalHelpResourcesContentUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
