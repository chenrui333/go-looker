// Code generated by go-swagger; DO NOT EDIT.

package config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// UpdateWhitelabelConfigurationReader is a Reader for the UpdateWhitelabelConfiguration structure.
type UpdateWhitelabelConfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateWhitelabelConfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateWhitelabelConfigurationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateWhitelabelConfigurationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateWhitelabelConfigurationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateWhitelabelConfigurationUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateWhitelabelConfigurationOK creates a UpdateWhitelabelConfigurationOK with default headers values
func NewUpdateWhitelabelConfigurationOK() *UpdateWhitelabelConfigurationOK {
	return &UpdateWhitelabelConfigurationOK{}
}

/*UpdateWhitelabelConfigurationOK handles this case with default header values.

Whitelabel configuration
*/
type UpdateWhitelabelConfigurationOK struct {
	Payload *models.WhitelabelConfiguration
}

func (o *UpdateWhitelabelConfigurationOK) Error() string {
	return fmt.Sprintf("[PUT /whitelabel_configuration][%d] updateWhitelabelConfigurationOK  %+v", 200, o.Payload)
}

func (o *UpdateWhitelabelConfigurationOK) GetPayload() *models.WhitelabelConfiguration {
	return o.Payload
}

func (o *UpdateWhitelabelConfigurationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WhitelabelConfiguration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateWhitelabelConfigurationBadRequest creates a UpdateWhitelabelConfigurationBadRequest with default headers values
func NewUpdateWhitelabelConfigurationBadRequest() *UpdateWhitelabelConfigurationBadRequest {
	return &UpdateWhitelabelConfigurationBadRequest{}
}

/*UpdateWhitelabelConfigurationBadRequest handles this case with default header values.

Bad Request
*/
type UpdateWhitelabelConfigurationBadRequest struct {
	Payload *models.Error
}

func (o *UpdateWhitelabelConfigurationBadRequest) Error() string {
	return fmt.Sprintf("[PUT /whitelabel_configuration][%d] updateWhitelabelConfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateWhitelabelConfigurationBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateWhitelabelConfigurationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateWhitelabelConfigurationNotFound creates a UpdateWhitelabelConfigurationNotFound with default headers values
func NewUpdateWhitelabelConfigurationNotFound() *UpdateWhitelabelConfigurationNotFound {
	return &UpdateWhitelabelConfigurationNotFound{}
}

/*UpdateWhitelabelConfigurationNotFound handles this case with default header values.

Not Found
*/
type UpdateWhitelabelConfigurationNotFound struct {
	Payload *models.Error
}

func (o *UpdateWhitelabelConfigurationNotFound) Error() string {
	return fmt.Sprintf("[PUT /whitelabel_configuration][%d] updateWhitelabelConfigurationNotFound  %+v", 404, o.Payload)
}

func (o *UpdateWhitelabelConfigurationNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateWhitelabelConfigurationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateWhitelabelConfigurationUnprocessableEntity creates a UpdateWhitelabelConfigurationUnprocessableEntity with default headers values
func NewUpdateWhitelabelConfigurationUnprocessableEntity() *UpdateWhitelabelConfigurationUnprocessableEntity {
	return &UpdateWhitelabelConfigurationUnprocessableEntity{}
}

/*UpdateWhitelabelConfigurationUnprocessableEntity handles this case with default header values.

Validation Error
*/
type UpdateWhitelabelConfigurationUnprocessableEntity struct {
	Payload *models.ValidationError
}

func (o *UpdateWhitelabelConfigurationUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /whitelabel_configuration][%d] updateWhitelabelConfigurationUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateWhitelabelConfigurationUnprocessableEntity) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *UpdateWhitelabelConfigurationUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
