// Code generated by go-swagger; DO NOT EDIT.

package config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// CustomWelcomeEmailReader is a Reader for the CustomWelcomeEmail structure.
type CustomWelcomeEmailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CustomWelcomeEmailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCustomWelcomeEmailOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCustomWelcomeEmailBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCustomWelcomeEmailNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCustomWelcomeEmailOK creates a CustomWelcomeEmailOK with default headers values
func NewCustomWelcomeEmailOK() *CustomWelcomeEmailOK {
	return &CustomWelcomeEmailOK{}
}

/*CustomWelcomeEmailOK handles this case with default header values.

Custom Welcome Email
*/
type CustomWelcomeEmailOK struct {
	Payload *models.CustomWelcomeEmail
}

func (o *CustomWelcomeEmailOK) Error() string {
	return fmt.Sprintf("[GET /custom_welcome_email][%d] customWelcomeEmailOK  %+v", 200, o.Payload)
}

func (o *CustomWelcomeEmailOK) GetPayload() *models.CustomWelcomeEmail {
	return o.Payload
}

func (o *CustomWelcomeEmailOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomWelcomeEmail)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomWelcomeEmailBadRequest creates a CustomWelcomeEmailBadRequest with default headers values
func NewCustomWelcomeEmailBadRequest() *CustomWelcomeEmailBadRequest {
	return &CustomWelcomeEmailBadRequest{}
}

/*CustomWelcomeEmailBadRequest handles this case with default header values.

Bad Request
*/
type CustomWelcomeEmailBadRequest struct {
	Payload *models.Error
}

func (o *CustomWelcomeEmailBadRequest) Error() string {
	return fmt.Sprintf("[GET /custom_welcome_email][%d] customWelcomeEmailBadRequest  %+v", 400, o.Payload)
}

func (o *CustomWelcomeEmailBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CustomWelcomeEmailBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomWelcomeEmailNotFound creates a CustomWelcomeEmailNotFound with default headers values
func NewCustomWelcomeEmailNotFound() *CustomWelcomeEmailNotFound {
	return &CustomWelcomeEmailNotFound{}
}

/*CustomWelcomeEmailNotFound handles this case with default header values.

Not Found
*/
type CustomWelcomeEmailNotFound struct {
	Payload *models.Error
}

func (o *CustomWelcomeEmailNotFound) Error() string {
	return fmt.Sprintf("[GET /custom_welcome_email][%d] customWelcomeEmailNotFound  %+v", 404, o.Payload)
}

func (o *CustomWelcomeEmailNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CustomWelcomeEmailNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
