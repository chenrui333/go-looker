// Code generated by go-swagger; DO NOT EDIT.

package render_task

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// CreateQueryRenderTaskReader is a Reader for the CreateQueryRenderTask structure.
type CreateQueryRenderTaskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateQueryRenderTaskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateQueryRenderTaskOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateQueryRenderTaskBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateQueryRenderTaskNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateQueryRenderTaskConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateQueryRenderTaskUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateQueryRenderTaskOK creates a CreateQueryRenderTaskOK with default headers values
func NewCreateQueryRenderTaskOK() *CreateQueryRenderTaskOK {
	return &CreateQueryRenderTaskOK{}
}

/*CreateQueryRenderTaskOK handles this case with default header values.

Render Task
*/
type CreateQueryRenderTaskOK struct {
	Payload *models.RenderTask
}

func (o *CreateQueryRenderTaskOK) Error() string {
	return fmt.Sprintf("[POST /render_tasks/queries/{query_id}/{result_format}][%d] createQueryRenderTaskOK  %+v", 200, o.Payload)
}

func (o *CreateQueryRenderTaskOK) GetPayload() *models.RenderTask {
	return o.Payload
}

func (o *CreateQueryRenderTaskOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RenderTask)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateQueryRenderTaskBadRequest creates a CreateQueryRenderTaskBadRequest with default headers values
func NewCreateQueryRenderTaskBadRequest() *CreateQueryRenderTaskBadRequest {
	return &CreateQueryRenderTaskBadRequest{}
}

/*CreateQueryRenderTaskBadRequest handles this case with default header values.

Bad Request
*/
type CreateQueryRenderTaskBadRequest struct {
	Payload *models.Error
}

func (o *CreateQueryRenderTaskBadRequest) Error() string {
	return fmt.Sprintf("[POST /render_tasks/queries/{query_id}/{result_format}][%d] createQueryRenderTaskBadRequest  %+v", 400, o.Payload)
}

func (o *CreateQueryRenderTaskBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateQueryRenderTaskBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateQueryRenderTaskNotFound creates a CreateQueryRenderTaskNotFound with default headers values
func NewCreateQueryRenderTaskNotFound() *CreateQueryRenderTaskNotFound {
	return &CreateQueryRenderTaskNotFound{}
}

/*CreateQueryRenderTaskNotFound handles this case with default header values.

Not Found
*/
type CreateQueryRenderTaskNotFound struct {
	Payload *models.Error
}

func (o *CreateQueryRenderTaskNotFound) Error() string {
	return fmt.Sprintf("[POST /render_tasks/queries/{query_id}/{result_format}][%d] createQueryRenderTaskNotFound  %+v", 404, o.Payload)
}

func (o *CreateQueryRenderTaskNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateQueryRenderTaskNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateQueryRenderTaskConflict creates a CreateQueryRenderTaskConflict with default headers values
func NewCreateQueryRenderTaskConflict() *CreateQueryRenderTaskConflict {
	return &CreateQueryRenderTaskConflict{}
}

/*CreateQueryRenderTaskConflict handles this case with default header values.

Resource Already Exists
*/
type CreateQueryRenderTaskConflict struct {
	Payload *models.Error
}

func (o *CreateQueryRenderTaskConflict) Error() string {
	return fmt.Sprintf("[POST /render_tasks/queries/{query_id}/{result_format}][%d] createQueryRenderTaskConflict  %+v", 409, o.Payload)
}

func (o *CreateQueryRenderTaskConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateQueryRenderTaskConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateQueryRenderTaskUnprocessableEntity creates a CreateQueryRenderTaskUnprocessableEntity with default headers values
func NewCreateQueryRenderTaskUnprocessableEntity() *CreateQueryRenderTaskUnprocessableEntity {
	return &CreateQueryRenderTaskUnprocessableEntity{}
}

/*CreateQueryRenderTaskUnprocessableEntity handles this case with default header values.

Validation Error
*/
type CreateQueryRenderTaskUnprocessableEntity struct {
	Payload *models.ValidationError
}

func (o *CreateQueryRenderTaskUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /render_tasks/queries/{query_id}/{result_format}][%d] createQueryRenderTaskUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateQueryRenderTaskUnprocessableEntity) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *CreateQueryRenderTaskUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
