// Code generated by go-swagger; DO NOT EDIT.

package lookml_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// AllLookmlModelsReader is a Reader for the AllLookmlModels structure.
type AllLookmlModelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AllLookmlModelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAllLookmlModelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAllLookmlModelsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAllLookmlModelsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAllLookmlModelsOK creates a AllLookmlModelsOK with default headers values
func NewAllLookmlModelsOK() *AllLookmlModelsOK {
	return &AllLookmlModelsOK{}
}

/*AllLookmlModelsOK handles this case with default header values.

LookML Model
*/
type AllLookmlModelsOK struct {
	Payload []*models.LookmlModel
}

func (o *AllLookmlModelsOK) Error() string {
	return fmt.Sprintf("[GET /lookml_models][%d] allLookmlModelsOK  %+v", 200, o.Payload)
}

func (o *AllLookmlModelsOK) GetPayload() []*models.LookmlModel {
	return o.Payload
}

func (o *AllLookmlModelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAllLookmlModelsBadRequest creates a AllLookmlModelsBadRequest with default headers values
func NewAllLookmlModelsBadRequest() *AllLookmlModelsBadRequest {
	return &AllLookmlModelsBadRequest{}
}

/*AllLookmlModelsBadRequest handles this case with default header values.

Bad Request
*/
type AllLookmlModelsBadRequest struct {
	Payload *models.Error
}

func (o *AllLookmlModelsBadRequest) Error() string {
	return fmt.Sprintf("[GET /lookml_models][%d] allLookmlModelsBadRequest  %+v", 400, o.Payload)
}

func (o *AllLookmlModelsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *AllLookmlModelsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAllLookmlModelsNotFound creates a AllLookmlModelsNotFound with default headers values
func NewAllLookmlModelsNotFound() *AllLookmlModelsNotFound {
	return &AllLookmlModelsNotFound{}
}

/*AllLookmlModelsNotFound handles this case with default header values.

Not Found
*/
type AllLookmlModelsNotFound struct {
	Payload *models.Error
}

func (o *AllLookmlModelsNotFound) Error() string {
	return fmt.Sprintf("[GET /lookml_models][%d] allLookmlModelsNotFound  %+v", 404, o.Payload)
}

func (o *AllLookmlModelsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *AllLookmlModelsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
