// Code generated by go-swagger; DO NOT EDIT.

package content

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// UpdateContentMetadataReader is a Reader for the UpdateContentMetadata structure.
type UpdateContentMetadataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateContentMetadataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateContentMetadataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateContentMetadataBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateContentMetadataNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateContentMetadataUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateContentMetadataOK creates a UpdateContentMetadataOK with default headers values
func NewUpdateContentMetadataOK() *UpdateContentMetadataOK {
	return &UpdateContentMetadataOK{}
}

/*UpdateContentMetadataOK handles this case with default header values.

Content Metadata
*/
type UpdateContentMetadataOK struct {
	Payload *models.ContentMeta
}

func (o *UpdateContentMetadataOK) Error() string {
	return fmt.Sprintf("[PATCH /content_metadata/{content_metadata_id}][%d] updateContentMetadataOK  %+v", 200, o.Payload)
}

func (o *UpdateContentMetadataOK) GetPayload() *models.ContentMeta {
	return o.Payload
}

func (o *UpdateContentMetadataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContentMeta)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateContentMetadataBadRequest creates a UpdateContentMetadataBadRequest with default headers values
func NewUpdateContentMetadataBadRequest() *UpdateContentMetadataBadRequest {
	return &UpdateContentMetadataBadRequest{}
}

/*UpdateContentMetadataBadRequest handles this case with default header values.

Bad Request
*/
type UpdateContentMetadataBadRequest struct {
	Payload *models.Error
}

func (o *UpdateContentMetadataBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /content_metadata/{content_metadata_id}][%d] updateContentMetadataBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateContentMetadataBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateContentMetadataBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateContentMetadataNotFound creates a UpdateContentMetadataNotFound with default headers values
func NewUpdateContentMetadataNotFound() *UpdateContentMetadataNotFound {
	return &UpdateContentMetadataNotFound{}
}

/*UpdateContentMetadataNotFound handles this case with default header values.

Not Found
*/
type UpdateContentMetadataNotFound struct {
	Payload *models.Error
}

func (o *UpdateContentMetadataNotFound) Error() string {
	return fmt.Sprintf("[PATCH /content_metadata/{content_metadata_id}][%d] updateContentMetadataNotFound  %+v", 404, o.Payload)
}

func (o *UpdateContentMetadataNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateContentMetadataNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateContentMetadataUnprocessableEntity creates a UpdateContentMetadataUnprocessableEntity with default headers values
func NewUpdateContentMetadataUnprocessableEntity() *UpdateContentMetadataUnprocessableEntity {
	return &UpdateContentMetadataUnprocessableEntity{}
}

/*UpdateContentMetadataUnprocessableEntity handles this case with default header values.

Validation Error
*/
type UpdateContentMetadataUnprocessableEntity struct {
	Payload *models.ValidationError
}

func (o *UpdateContentMetadataUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /content_metadata/{content_metadata_id}][%d] updateContentMetadataUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateContentMetadataUnprocessableEntity) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *UpdateContentMetadataUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
