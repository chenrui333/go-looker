// Code generated by go-swagger; DO NOT EDIT.

package content

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// AllContentMetadataAccesssReader is a Reader for the AllContentMetadataAccesss structure.
type AllContentMetadataAccesssReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AllContentMetadataAccesssReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAllContentMetadataAccesssOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAllContentMetadataAccesssBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewAllContentMetadataAccesssNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAllContentMetadataAccesssOK creates a AllContentMetadataAccesssOK with default headers values
func NewAllContentMetadataAccesssOK() *AllContentMetadataAccesssOK {
	return &AllContentMetadataAccesssOK{}
}

/*AllContentMetadataAccesssOK handles this case with default header values.

Content Metadata Access
*/
type AllContentMetadataAccesssOK struct {
	Payload []*models.ContentMetaGroupUser
}

func (o *AllContentMetadataAccesssOK) Error() string {
	return fmt.Sprintf("[GET /content_metadata_access][%d] allContentMetadataAccesssOK  %+v", 200, o.Payload)
}

func (o *AllContentMetadataAccesssOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAllContentMetadataAccesssBadRequest creates a AllContentMetadataAccesssBadRequest with default headers values
func NewAllContentMetadataAccesssBadRequest() *AllContentMetadataAccesssBadRequest {
	return &AllContentMetadataAccesssBadRequest{}
}

/*AllContentMetadataAccesssBadRequest handles this case with default header values.

Bad Request
*/
type AllContentMetadataAccesssBadRequest struct {
	Payload *models.Error
}

func (o *AllContentMetadataAccesssBadRequest) Error() string {
	return fmt.Sprintf("[GET /content_metadata_access][%d] allContentMetadataAccesssBadRequest  %+v", 400, o.Payload)
}

func (o *AllContentMetadataAccesssBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAllContentMetadataAccesssNotFound creates a AllContentMetadataAccesssNotFound with default headers values
func NewAllContentMetadataAccesssNotFound() *AllContentMetadataAccesssNotFound {
	return &AllContentMetadataAccesssNotFound{}
}

/*AllContentMetadataAccesssNotFound handles this case with default header values.

Not Found
*/
type AllContentMetadataAccesssNotFound struct {
	Payload *models.Error
}

func (o *AllContentMetadataAccesssNotFound) Error() string {
	return fmt.Sprintf("[GET /content_metadata_access][%d] allContentMetadataAccesssNotFound  %+v", 404, o.Payload)
}

func (o *AllContentMetadataAccesssNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
