// Code generated by go-swagger; DO NOT EDIT.

package content

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// CreateContentFavoriteReader is a Reader for the CreateContentFavorite structure.
type CreateContentFavoriteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateContentFavoriteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateContentFavoriteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateContentFavoriteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewCreateContentFavoriteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewCreateContentFavoriteConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewCreateContentFavoriteUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateContentFavoriteOK creates a CreateContentFavoriteOK with default headers values
func NewCreateContentFavoriteOK() *CreateContentFavoriteOK {
	return &CreateContentFavoriteOK{}
}

/*CreateContentFavoriteOK handles this case with default header values.

Favorite Content
*/
type CreateContentFavoriteOK struct {
	Payload *models.ContentFavorite
}

func (o *CreateContentFavoriteOK) Error() string {
	return fmt.Sprintf("[POST /content_favorite][%d] createContentFavoriteOK  %+v", 200, o.Payload)
}

func (o *CreateContentFavoriteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContentFavorite)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateContentFavoriteBadRequest creates a CreateContentFavoriteBadRequest with default headers values
func NewCreateContentFavoriteBadRequest() *CreateContentFavoriteBadRequest {
	return &CreateContentFavoriteBadRequest{}
}

/*CreateContentFavoriteBadRequest handles this case with default header values.

Bad Request
*/
type CreateContentFavoriteBadRequest struct {
	Payload *models.Error
}

func (o *CreateContentFavoriteBadRequest) Error() string {
	return fmt.Sprintf("[POST /content_favorite][%d] createContentFavoriteBadRequest  %+v", 400, o.Payload)
}

func (o *CreateContentFavoriteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateContentFavoriteNotFound creates a CreateContentFavoriteNotFound with default headers values
func NewCreateContentFavoriteNotFound() *CreateContentFavoriteNotFound {
	return &CreateContentFavoriteNotFound{}
}

/*CreateContentFavoriteNotFound handles this case with default header values.

Not Found
*/
type CreateContentFavoriteNotFound struct {
	Payload *models.Error
}

func (o *CreateContentFavoriteNotFound) Error() string {
	return fmt.Sprintf("[POST /content_favorite][%d] createContentFavoriteNotFound  %+v", 404, o.Payload)
}

func (o *CreateContentFavoriteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateContentFavoriteConflict creates a CreateContentFavoriteConflict with default headers values
func NewCreateContentFavoriteConflict() *CreateContentFavoriteConflict {
	return &CreateContentFavoriteConflict{}
}

/*CreateContentFavoriteConflict handles this case with default header values.

Resource Already Exists
*/
type CreateContentFavoriteConflict struct {
	Payload *models.Error
}

func (o *CreateContentFavoriteConflict) Error() string {
	return fmt.Sprintf("[POST /content_favorite][%d] createContentFavoriteConflict  %+v", 409, o.Payload)
}

func (o *CreateContentFavoriteConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateContentFavoriteUnprocessableEntity creates a CreateContentFavoriteUnprocessableEntity with default headers values
func NewCreateContentFavoriteUnprocessableEntity() *CreateContentFavoriteUnprocessableEntity {
	return &CreateContentFavoriteUnprocessableEntity{}
}

/*CreateContentFavoriteUnprocessableEntity handles this case with default header values.

Validation Error
*/
type CreateContentFavoriteUnprocessableEntity struct {
	Payload *models.ValidationError
}

func (o *CreateContentFavoriteUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /content_favorite][%d] createContentFavoriteUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateContentFavoriteUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
