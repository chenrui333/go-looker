// Code generated by go-swagger; DO NOT EDIT.

package content

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// CreateContentMetadataAccessReader is a Reader for the CreateContentMetadataAccess structure.
type CreateContentMetadataAccessReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateContentMetadataAccessReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateContentMetadataAccessOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateContentMetadataAccessBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateContentMetadataAccessNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateContentMetadataAccessTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateContentMetadataAccessOK creates a CreateContentMetadataAccessOK with default headers values
func NewCreateContentMetadataAccessOK() *CreateContentMetadataAccessOK {
	return &CreateContentMetadataAccessOK{}
}

/*CreateContentMetadataAccessOK handles this case with default header values.

Content Metadata Access
*/
type CreateContentMetadataAccessOK struct {
	Payload *models.ContentMetaGroupUser
}

func (o *CreateContentMetadataAccessOK) Error() string {
	return fmt.Sprintf("[POST /content_metadata_access][%d] createContentMetadataAccessOK  %+v", 200, o.Payload)
}

func (o *CreateContentMetadataAccessOK) GetPayload() *models.ContentMetaGroupUser {
	return o.Payload
}

func (o *CreateContentMetadataAccessOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContentMetaGroupUser)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateContentMetadataAccessBadRequest creates a CreateContentMetadataAccessBadRequest with default headers values
func NewCreateContentMetadataAccessBadRequest() *CreateContentMetadataAccessBadRequest {
	return &CreateContentMetadataAccessBadRequest{}
}

/*CreateContentMetadataAccessBadRequest handles this case with default header values.

Bad Request
*/
type CreateContentMetadataAccessBadRequest struct {
	Payload *models.Error
}

func (o *CreateContentMetadataAccessBadRequest) Error() string {
	return fmt.Sprintf("[POST /content_metadata_access][%d] createContentMetadataAccessBadRequest  %+v", 400, o.Payload)
}

func (o *CreateContentMetadataAccessBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateContentMetadataAccessBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateContentMetadataAccessNotFound creates a CreateContentMetadataAccessNotFound with default headers values
func NewCreateContentMetadataAccessNotFound() *CreateContentMetadataAccessNotFound {
	return &CreateContentMetadataAccessNotFound{}
}

/*CreateContentMetadataAccessNotFound handles this case with default header values.

Not Found
*/
type CreateContentMetadataAccessNotFound struct {
	Payload *models.Error
}

func (o *CreateContentMetadataAccessNotFound) Error() string {
	return fmt.Sprintf("[POST /content_metadata_access][%d] createContentMetadataAccessNotFound  %+v", 404, o.Payload)
}

func (o *CreateContentMetadataAccessNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateContentMetadataAccessNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateContentMetadataAccessTooManyRequests creates a CreateContentMetadataAccessTooManyRequests with default headers values
func NewCreateContentMetadataAccessTooManyRequests() *CreateContentMetadataAccessTooManyRequests {
	return &CreateContentMetadataAccessTooManyRequests{}
}

/*CreateContentMetadataAccessTooManyRequests handles this case with default header values.

Too Many Requests
*/
type CreateContentMetadataAccessTooManyRequests struct {
	Payload *models.Error
}

func (o *CreateContentMetadataAccessTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /content_metadata_access][%d] createContentMetadataAccessTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateContentMetadataAccessTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateContentMetadataAccessTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
