// Code generated by go-swagger; DO NOT EDIT.

package query

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// QueryTaskResultsReader is a Reader for the QueryTaskResults structure.
type QueryTaskResultsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *QueryTaskResultsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewQueryTaskResultsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewQueryTaskResultsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewQueryTaskResultsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewQueryTaskResultsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewQueryTaskResultsOK creates a QueryTaskResultsOK with default headers values
func NewQueryTaskResultsOK() *QueryTaskResultsOK {
	return &QueryTaskResultsOK{}
}

/*QueryTaskResultsOK handles this case with default header values.

The query results.
*/
type QueryTaskResultsOK struct {
	Payload map[string]string
}

func (o *QueryTaskResultsOK) Error() string {
	return fmt.Sprintf("[GET /query_tasks/{query_task_id}/results][%d] queryTaskResultsOK  %+v", 200, o.Payload)
}

func (o *QueryTaskResultsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryTaskResultsNoContent creates a QueryTaskResultsNoContent with default headers values
func NewQueryTaskResultsNoContent() *QueryTaskResultsNoContent {
	return &QueryTaskResultsNoContent{}
}

/*QueryTaskResultsNoContent handles this case with default header values.

The query is not finished
*/
type QueryTaskResultsNoContent struct {
	Payload string
}

func (o *QueryTaskResultsNoContent) Error() string {
	return fmt.Sprintf("[GET /query_tasks/{query_task_id}/results][%d] queryTaskResultsNoContent  %+v", 204, o.Payload)
}

func (o *QueryTaskResultsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryTaskResultsBadRequest creates a QueryTaskResultsBadRequest with default headers values
func NewQueryTaskResultsBadRequest() *QueryTaskResultsBadRequest {
	return &QueryTaskResultsBadRequest{}
}

/*QueryTaskResultsBadRequest handles this case with default header values.

Bad Request
*/
type QueryTaskResultsBadRequest struct {
	Payload *models.Error
}

func (o *QueryTaskResultsBadRequest) Error() string {
	return fmt.Sprintf("[GET /query_tasks/{query_task_id}/results][%d] queryTaskResultsBadRequest  %+v", 400, o.Payload)
}

func (o *QueryTaskResultsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQueryTaskResultsNotFound creates a QueryTaskResultsNotFound with default headers values
func NewQueryTaskResultsNotFound() *QueryTaskResultsNotFound {
	return &QueryTaskResultsNotFound{}
}

/*QueryTaskResultsNotFound handles this case with default header values.

The Query Task Id was not found or the results have expired.
*/
type QueryTaskResultsNotFound struct {
	Payload *models.Error
}

func (o *QueryTaskResultsNotFound) Error() string {
	return fmt.Sprintf("[GET /query_tasks/{query_task_id}/results][%d] queryTaskResultsNotFound  %+v", 404, o.Payload)
}

func (o *QueryTaskResultsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
