// Code generated by go-swagger; DO NOT EDIT.

package query

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// CreateSQLQueryReader is a Reader for the CreateSQLQuery structure.
type CreateSQLQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSQLQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateSQLQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateSQLQueryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateSQLQueryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateSQLQueryOK creates a CreateSQLQueryOK with default headers values
func NewCreateSQLQueryOK() *CreateSQLQueryOK {
	return &CreateSQLQueryOK{}
}

/*CreateSQLQueryOK handles this case with default header values.

SQL Runner Query
*/
type CreateSQLQueryOK struct {
	Payload *models.SQLQuery
}

func (o *CreateSQLQueryOK) Error() string {
	return fmt.Sprintf("[POST /sql_queries][%d] createSqlQueryOK  %+v", 200, o.Payload)
}

func (o *CreateSQLQueryOK) GetPayload() *models.SQLQuery {
	return o.Payload
}

func (o *CreateSQLQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SQLQuery)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSQLQueryBadRequest creates a CreateSQLQueryBadRequest with default headers values
func NewCreateSQLQueryBadRequest() *CreateSQLQueryBadRequest {
	return &CreateSQLQueryBadRequest{}
}

/*CreateSQLQueryBadRequest handles this case with default header values.

Bad Request
*/
type CreateSQLQueryBadRequest struct {
	Payload *models.Error
}

func (o *CreateSQLQueryBadRequest) Error() string {
	return fmt.Sprintf("[POST /sql_queries][%d] createSqlQueryBadRequest  %+v", 400, o.Payload)
}

func (o *CreateSQLQueryBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateSQLQueryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSQLQueryNotFound creates a CreateSQLQueryNotFound with default headers values
func NewCreateSQLQueryNotFound() *CreateSQLQueryNotFound {
	return &CreateSQLQueryNotFound{}
}

/*CreateSQLQueryNotFound handles this case with default header values.

Not Found
*/
type CreateSQLQueryNotFound struct {
	Payload *models.Error
}

func (o *CreateSQLQueryNotFound) Error() string {
	return fmt.Sprintf("[POST /sql_queries][%d] createSqlQueryNotFound  %+v", 404, o.Payload)
}

func (o *CreateSQLQueryNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateSQLQueryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
