// Code generated by go-swagger; DO NOT EDIT.

package folder

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// SearchFoldersReader is a Reader for the SearchFolders structure.
type SearchFoldersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchFoldersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchFoldersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchFoldersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchFoldersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSearchFoldersOK creates a SearchFoldersOK with default headers values
func NewSearchFoldersOK() *SearchFoldersOK {
	return &SearchFoldersOK{}
}

/*SearchFoldersOK handles this case with default header values.

folders
*/
type SearchFoldersOK struct {
	Payload []*models.Folder
}

func (o *SearchFoldersOK) Error() string {
	return fmt.Sprintf("[GET /folders/search][%d] searchFoldersOK  %+v", 200, o.Payload)
}

func (o *SearchFoldersOK) GetPayload() []*models.Folder {
	return o.Payload
}

func (o *SearchFoldersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchFoldersBadRequest creates a SearchFoldersBadRequest with default headers values
func NewSearchFoldersBadRequest() *SearchFoldersBadRequest {
	return &SearchFoldersBadRequest{}
}

/*SearchFoldersBadRequest handles this case with default header values.

Bad Request
*/
type SearchFoldersBadRequest struct {
	Payload *models.Error
}

func (o *SearchFoldersBadRequest) Error() string {
	return fmt.Sprintf("[GET /folders/search][%d] searchFoldersBadRequest  %+v", 400, o.Payload)
}

func (o *SearchFoldersBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchFoldersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchFoldersNotFound creates a SearchFoldersNotFound with default headers values
func NewSearchFoldersNotFound() *SearchFoldersNotFound {
	return &SearchFoldersNotFound{}
}

/*SearchFoldersNotFound handles this case with default header values.

Not Found
*/
type SearchFoldersNotFound struct {
	Payload *models.Error
}

func (o *SearchFoldersNotFound) Error() string {
	return fmt.Sprintf("[GET /folders/search][%d] searchFoldersNotFound  %+v", 404, o.Payload)
}

func (o *SearchFoldersNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchFoldersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
