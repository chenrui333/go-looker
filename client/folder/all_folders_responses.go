// Code generated by go-swagger; DO NOT EDIT.

package folder

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// AllFoldersReader is a Reader for the AllFolders structure.
type AllFoldersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AllFoldersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAllFoldersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAllFoldersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAllFoldersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAllFoldersOK creates a AllFoldersOK with default headers values
func NewAllFoldersOK() *AllFoldersOK {
	return &AllFoldersOK{}
}

/*AllFoldersOK handles this case with default header values.

Folder
*/
type AllFoldersOK struct {
	Payload []*models.Folder
}

func (o *AllFoldersOK) Error() string {
	return fmt.Sprintf("[GET /folders][%d] allFoldersOK  %+v", 200, o.Payload)
}

func (o *AllFoldersOK) GetPayload() []*models.Folder {
	return o.Payload
}

func (o *AllFoldersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAllFoldersBadRequest creates a AllFoldersBadRequest with default headers values
func NewAllFoldersBadRequest() *AllFoldersBadRequest {
	return &AllFoldersBadRequest{}
}

/*AllFoldersBadRequest handles this case with default header values.

Bad Request
*/
type AllFoldersBadRequest struct {
	Payload *models.Error
}

func (o *AllFoldersBadRequest) Error() string {
	return fmt.Sprintf("[GET /folders][%d] allFoldersBadRequest  %+v", 400, o.Payload)
}

func (o *AllFoldersBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *AllFoldersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAllFoldersNotFound creates a AllFoldersNotFound with default headers values
func NewAllFoldersNotFound() *AllFoldersNotFound {
	return &AllFoldersNotFound{}
}

/*AllFoldersNotFound handles this case with default header values.

Not Found
*/
type AllFoldersNotFound struct {
	Payload *models.Error
}

func (o *AllFoldersNotFound) Error() string {
	return fmt.Sprintf("[GET /folders][%d] allFoldersNotFound  %+v", 404, o.Payload)
}

func (o *AllFoldersNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *AllFoldersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
