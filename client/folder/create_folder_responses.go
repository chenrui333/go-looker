// Code generated by go-swagger; DO NOT EDIT.

package folder

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// CreateFolderReader is a Reader for the CreateFolder structure.
type CreateFolderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateFolderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateFolderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateFolderBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateFolderNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateFolderConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateFolderUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateFolderOK creates a CreateFolderOK with default headers values
func NewCreateFolderOK() *CreateFolderOK {
	return &CreateFolderOK{}
}

/*CreateFolderOK handles this case with default header values.

Folder
*/
type CreateFolderOK struct {
	Payload *models.Folder
}

func (o *CreateFolderOK) Error() string {
	return fmt.Sprintf("[POST /folders][%d] createFolderOK  %+v", 200, o.Payload)
}

func (o *CreateFolderOK) GetPayload() *models.Folder {
	return o.Payload
}

func (o *CreateFolderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Folder)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFolderBadRequest creates a CreateFolderBadRequest with default headers values
func NewCreateFolderBadRequest() *CreateFolderBadRequest {
	return &CreateFolderBadRequest{}
}

/*CreateFolderBadRequest handles this case with default header values.

Bad Request
*/
type CreateFolderBadRequest struct {
	Payload *models.Error
}

func (o *CreateFolderBadRequest) Error() string {
	return fmt.Sprintf("[POST /folders][%d] createFolderBadRequest  %+v", 400, o.Payload)
}

func (o *CreateFolderBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateFolderBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFolderNotFound creates a CreateFolderNotFound with default headers values
func NewCreateFolderNotFound() *CreateFolderNotFound {
	return &CreateFolderNotFound{}
}

/*CreateFolderNotFound handles this case with default header values.

Not Found
*/
type CreateFolderNotFound struct {
	Payload *models.Error
}

func (o *CreateFolderNotFound) Error() string {
	return fmt.Sprintf("[POST /folders][%d] createFolderNotFound  %+v", 404, o.Payload)
}

func (o *CreateFolderNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateFolderNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFolderConflict creates a CreateFolderConflict with default headers values
func NewCreateFolderConflict() *CreateFolderConflict {
	return &CreateFolderConflict{}
}

/*CreateFolderConflict handles this case with default header values.

Resource Already Exists
*/
type CreateFolderConflict struct {
	Payload *models.Error
}

func (o *CreateFolderConflict) Error() string {
	return fmt.Sprintf("[POST /folders][%d] createFolderConflict  %+v", 409, o.Payload)
}

func (o *CreateFolderConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateFolderConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFolderUnprocessableEntity creates a CreateFolderUnprocessableEntity with default headers values
func NewCreateFolderUnprocessableEntity() *CreateFolderUnprocessableEntity {
	return &CreateFolderUnprocessableEntity{}
}

/*CreateFolderUnprocessableEntity handles this case with default header values.

Validation Error
*/
type CreateFolderUnprocessableEntity struct {
	Payload *models.ValidationError
}

func (o *CreateFolderUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /folders][%d] createFolderUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateFolderUnprocessableEntity) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *CreateFolderUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
