// Code generated by go-swagger; DO NOT EDIT.

package folder

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewFolderChildrenSearchParams creates a new FolderChildrenSearchParams object
// with the default values initialized.
func NewFolderChildrenSearchParams() *FolderChildrenSearchParams {
	var ()
	return &FolderChildrenSearchParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewFolderChildrenSearchParamsWithTimeout creates a new FolderChildrenSearchParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewFolderChildrenSearchParamsWithTimeout(timeout time.Duration) *FolderChildrenSearchParams {
	var ()
	return &FolderChildrenSearchParams{

		timeout: timeout,
	}
}

// NewFolderChildrenSearchParamsWithContext creates a new FolderChildrenSearchParams object
// with the default values initialized, and the ability to set a context for a request
func NewFolderChildrenSearchParamsWithContext(ctx context.Context) *FolderChildrenSearchParams {
	var ()
	return &FolderChildrenSearchParams{

		Context: ctx,
	}
}

// NewFolderChildrenSearchParamsWithHTTPClient creates a new FolderChildrenSearchParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewFolderChildrenSearchParamsWithHTTPClient(client *http.Client) *FolderChildrenSearchParams {
	var ()
	return &FolderChildrenSearchParams{
		HTTPClient: client,
	}
}

/*FolderChildrenSearchParams contains all the parameters to send to the API endpoint
for the folder children search operation typically these are written to a http.Request
*/
type FolderChildrenSearchParams struct {

	/*Fields
	  Requested fields.

	*/
	Fields *string
	/*FolderID
	  Id of folder

	*/
	FolderID string
	/*Name
	  Match folder name.

	*/
	Name *string
	/*Sorts
	  Fields to sort by.

	*/
	Sorts *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the folder children search params
func (o *FolderChildrenSearchParams) WithTimeout(timeout time.Duration) *FolderChildrenSearchParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the folder children search params
func (o *FolderChildrenSearchParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the folder children search params
func (o *FolderChildrenSearchParams) WithContext(ctx context.Context) *FolderChildrenSearchParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the folder children search params
func (o *FolderChildrenSearchParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the folder children search params
func (o *FolderChildrenSearchParams) WithHTTPClient(client *http.Client) *FolderChildrenSearchParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the folder children search params
func (o *FolderChildrenSearchParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFields adds the fields to the folder children search params
func (o *FolderChildrenSearchParams) WithFields(fields *string) *FolderChildrenSearchParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the folder children search params
func (o *FolderChildrenSearchParams) SetFields(fields *string) {
	o.Fields = fields
}

// WithFolderID adds the folderID to the folder children search params
func (o *FolderChildrenSearchParams) WithFolderID(folderID string) *FolderChildrenSearchParams {
	o.SetFolderID(folderID)
	return o
}

// SetFolderID adds the folderId to the folder children search params
func (o *FolderChildrenSearchParams) SetFolderID(folderID string) {
	o.FolderID = folderID
}

// WithName adds the name to the folder children search params
func (o *FolderChildrenSearchParams) WithName(name *string) *FolderChildrenSearchParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the folder children search params
func (o *FolderChildrenSearchParams) SetName(name *string) {
	o.Name = name
}

// WithSorts adds the sorts to the folder children search params
func (o *FolderChildrenSearchParams) WithSorts(sorts *string) *FolderChildrenSearchParams {
	o.SetSorts(sorts)
	return o
}

// SetSorts adds the sorts to the folder children search params
func (o *FolderChildrenSearchParams) SetSorts(sorts *string) {
	o.Sorts = sorts
}

// WriteToRequest writes these params to a swagger request
func (o *FolderChildrenSearchParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Fields != nil {

		// query param fields
		var qrFields string
		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {
			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}

	}

	// path param folder_id
	if err := r.SetPathParam("folder_id", o.FolderID); err != nil {
		return err
	}

	if o.Name != nil {

		// query param name
		var qrName string
		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {
			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}

	}

	if o.Sorts != nil {

		// query param sorts
		var qrSorts string
		if o.Sorts != nil {
			qrSorts = *o.Sorts
		}
		qSorts := qrSorts
		if qSorts != "" {
			if err := r.SetQueryParam("sorts", qSorts); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
