// Code generated by go-swagger; DO NOT EDIT.

package folder

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// FolderParentReader is a Reader for the FolderParent structure.
type FolderParentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FolderParentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFolderParentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFolderParentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFolderParentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewFolderParentOK creates a FolderParentOK with default headers values
func NewFolderParentOK() *FolderParentOK {
	return &FolderParentOK{}
}

/*FolderParentOK handles this case with default header values.

Folder
*/
type FolderParentOK struct {
	Payload *models.Folder
}

func (o *FolderParentOK) Error() string {
	return fmt.Sprintf("[GET /folders/{folder_id}/parent][%d] folderParentOK  %+v", 200, o.Payload)
}

func (o *FolderParentOK) GetPayload() *models.Folder {
	return o.Payload
}

func (o *FolderParentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Folder)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFolderParentBadRequest creates a FolderParentBadRequest with default headers values
func NewFolderParentBadRequest() *FolderParentBadRequest {
	return &FolderParentBadRequest{}
}

/*FolderParentBadRequest handles this case with default header values.

Bad Request
*/
type FolderParentBadRequest struct {
	Payload *models.Error
}

func (o *FolderParentBadRequest) Error() string {
	return fmt.Sprintf("[GET /folders/{folder_id}/parent][%d] folderParentBadRequest  %+v", 400, o.Payload)
}

func (o *FolderParentBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *FolderParentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFolderParentNotFound creates a FolderParentNotFound with default headers values
func NewFolderParentNotFound() *FolderParentNotFound {
	return &FolderParentNotFound{}
}

/*FolderParentNotFound handles this case with default header values.

Not Found
*/
type FolderParentNotFound struct {
	Payload *models.Error
}

func (o *FolderParentNotFound) Error() string {
	return fmt.Sprintf("[GET /folders/{folder_id}/parent][%d] folderParentNotFound  %+v", 404, o.Payload)
}

func (o *FolderParentNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *FolderParentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
