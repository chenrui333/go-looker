// Code generated by go-swagger; DO NOT EDIT.

package color_collection

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// NewUpdateColorCollectionParams creates a new UpdateColorCollectionParams object
// with the default values initialized.
func NewUpdateColorCollectionParams() *UpdateColorCollectionParams {
	var ()
	return &UpdateColorCollectionParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateColorCollectionParamsWithTimeout creates a new UpdateColorCollectionParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateColorCollectionParamsWithTimeout(timeout time.Duration) *UpdateColorCollectionParams {
	var ()
	return &UpdateColorCollectionParams{

		timeout: timeout,
	}
}

// NewUpdateColorCollectionParamsWithContext creates a new UpdateColorCollectionParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateColorCollectionParamsWithContext(ctx context.Context) *UpdateColorCollectionParams {
	var ()
	return &UpdateColorCollectionParams{

		Context: ctx,
	}
}

// NewUpdateColorCollectionParamsWithHTTPClient creates a new UpdateColorCollectionParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateColorCollectionParamsWithHTTPClient(client *http.Client) *UpdateColorCollectionParams {
	var ()
	return &UpdateColorCollectionParams{
		HTTPClient: client,
	}
}

/*UpdateColorCollectionParams contains all the parameters to send to the API endpoint
for the update color collection operation typically these are written to a http.Request
*/
type UpdateColorCollectionParams struct {

	/*Body
	  ColorCollection

	*/
	Body *models.ColorCollection
	/*CollectionID
	  Id of Custom Color Collection

	*/
	CollectionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update color collection params
func (o *UpdateColorCollectionParams) WithTimeout(timeout time.Duration) *UpdateColorCollectionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update color collection params
func (o *UpdateColorCollectionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update color collection params
func (o *UpdateColorCollectionParams) WithContext(ctx context.Context) *UpdateColorCollectionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update color collection params
func (o *UpdateColorCollectionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update color collection params
func (o *UpdateColorCollectionParams) WithHTTPClient(client *http.Client) *UpdateColorCollectionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update color collection params
func (o *UpdateColorCollectionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update color collection params
func (o *UpdateColorCollectionParams) WithBody(body *models.ColorCollection) *UpdateColorCollectionParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update color collection params
func (o *UpdateColorCollectionParams) SetBody(body *models.ColorCollection) {
	o.Body = body
}

// WithCollectionID adds the collectionID to the update color collection params
func (o *UpdateColorCollectionParams) WithCollectionID(collectionID string) *UpdateColorCollectionParams {
	o.SetCollectionID(collectionID)
	return o
}

// SetCollectionID adds the collectionId to the update color collection params
func (o *UpdateColorCollectionParams) SetCollectionID(collectionID string) {
	o.CollectionID = collectionID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateColorCollectionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param collection_id
	if err := r.SetPathParam("collection_id", o.CollectionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
