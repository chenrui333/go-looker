// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// UpdateOidcConfigReader is a Reader for the UpdateOidcConfig structure.
type UpdateOidcConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateOidcConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateOidcConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateOidcConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateOidcConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewUpdateOidcConfigUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateOidcConfigOK creates a UpdateOidcConfigOK with default headers values
func NewUpdateOidcConfigOK() *UpdateOidcConfigOK {
	return &UpdateOidcConfigOK{}
}

/*UpdateOidcConfigOK handles this case with default header values.

New state for OIDC Configuration.
*/
type UpdateOidcConfigOK struct {
	Payload *models.OIDCConfig
}

func (o *UpdateOidcConfigOK) Error() string {
	return fmt.Sprintf("[PATCH /oidc_config][%d] updateOidcConfigOK  %+v", 200, o.Payload)
}

func (o *UpdateOidcConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OIDCConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOidcConfigBadRequest creates a UpdateOidcConfigBadRequest with default headers values
func NewUpdateOidcConfigBadRequest() *UpdateOidcConfigBadRequest {
	return &UpdateOidcConfigBadRequest{}
}

/*UpdateOidcConfigBadRequest handles this case with default header values.

Bad Request
*/
type UpdateOidcConfigBadRequest struct {
	Payload *models.Error
}

func (o *UpdateOidcConfigBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /oidc_config][%d] updateOidcConfigBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateOidcConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOidcConfigNotFound creates a UpdateOidcConfigNotFound with default headers values
func NewUpdateOidcConfigNotFound() *UpdateOidcConfigNotFound {
	return &UpdateOidcConfigNotFound{}
}

/*UpdateOidcConfigNotFound handles this case with default header values.

Not Found
*/
type UpdateOidcConfigNotFound struct {
	Payload *models.Error
}

func (o *UpdateOidcConfigNotFound) Error() string {
	return fmt.Sprintf("[PATCH /oidc_config][%d] updateOidcConfigNotFound  %+v", 404, o.Payload)
}

func (o *UpdateOidcConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOidcConfigUnprocessableEntity creates a UpdateOidcConfigUnprocessableEntity with default headers values
func NewUpdateOidcConfigUnprocessableEntity() *UpdateOidcConfigUnprocessableEntity {
	return &UpdateOidcConfigUnprocessableEntity{}
}

/*UpdateOidcConfigUnprocessableEntity handles this case with default header values.

Validation Error
*/
type UpdateOidcConfigUnprocessableEntity struct {
	Payload *models.ValidationError
}

func (o *UpdateOidcConfigUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /oidc_config][%d] updateOidcConfigUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateOidcConfigUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
