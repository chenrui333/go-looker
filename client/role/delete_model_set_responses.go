// Code generated by go-swagger; DO NOT EDIT.

package role

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// DeleteModelSetReader is a Reader for the DeleteModelSet structure.
type DeleteModelSetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteModelSetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteModelSetNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteModelSetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteModelSetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewDeleteModelSetMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteModelSetNoContent creates a DeleteModelSetNoContent with default headers values
func NewDeleteModelSetNoContent() *DeleteModelSetNoContent {
	return &DeleteModelSetNoContent{}
}

/*DeleteModelSetNoContent handles this case with default header values.

Model set succssfully deleted.
*/
type DeleteModelSetNoContent struct {
	Payload string
}

func (o *DeleteModelSetNoContent) Error() string {
	return fmt.Sprintf("[DELETE /model_sets/{model_set_id}][%d] deleteModelSetNoContent  %+v", 204, o.Payload)
}

func (o *DeleteModelSetNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteModelSetBadRequest creates a DeleteModelSetBadRequest with default headers values
func NewDeleteModelSetBadRequest() *DeleteModelSetBadRequest {
	return &DeleteModelSetBadRequest{}
}

/*DeleteModelSetBadRequest handles this case with default header values.

Bad Request
*/
type DeleteModelSetBadRequest struct {
	Payload *models.Error
}

func (o *DeleteModelSetBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /model_sets/{model_set_id}][%d] deleteModelSetBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteModelSetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteModelSetNotFound creates a DeleteModelSetNotFound with default headers values
func NewDeleteModelSetNotFound() *DeleteModelSetNotFound {
	return &DeleteModelSetNotFound{}
}

/*DeleteModelSetNotFound handles this case with default header values.

Not Found
*/
type DeleteModelSetNotFound struct {
	Payload *models.Error
}

func (o *DeleteModelSetNotFound) Error() string {
	return fmt.Sprintf("[DELETE /model_sets/{model_set_id}][%d] deleteModelSetNotFound  %+v", 404, o.Payload)
}

func (o *DeleteModelSetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteModelSetMethodNotAllowed creates a DeleteModelSetMethodNotAllowed with default headers values
func NewDeleteModelSetMethodNotAllowed() *DeleteModelSetMethodNotAllowed {
	return &DeleteModelSetMethodNotAllowed{}
}

/*DeleteModelSetMethodNotAllowed handles this case with default header values.

Resource Can't Be Modified
*/
type DeleteModelSetMethodNotAllowed struct {
	Payload *models.Error
}

func (o *DeleteModelSetMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /model_sets/{model_set_id}][%d] deleteModelSetMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *DeleteModelSetMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
