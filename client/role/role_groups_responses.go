// Code generated by go-swagger; DO NOT EDIT.

package role

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// RoleGroupsReader is a Reader for the RoleGroups structure.
type RoleGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RoleGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRoleGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRoleGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRoleGroupsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRoleGroupsOK creates a RoleGroupsOK with default headers values
func NewRoleGroupsOK() *RoleGroupsOK {
	return &RoleGroupsOK{}
}

/*RoleGroupsOK handles this case with default header values.

Groups with role.
*/
type RoleGroupsOK struct {
	Payload []*models.Group
}

func (o *RoleGroupsOK) Error() string {
	return fmt.Sprintf("[GET /roles/{role_id}/groups][%d] roleGroupsOK  %+v", 200, o.Payload)
}

func (o *RoleGroupsOK) GetPayload() []*models.Group {
	return o.Payload
}

func (o *RoleGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRoleGroupsBadRequest creates a RoleGroupsBadRequest with default headers values
func NewRoleGroupsBadRequest() *RoleGroupsBadRequest {
	return &RoleGroupsBadRequest{}
}

/*RoleGroupsBadRequest handles this case with default header values.

Bad Request
*/
type RoleGroupsBadRequest struct {
	Payload *models.Error
}

func (o *RoleGroupsBadRequest) Error() string {
	return fmt.Sprintf("[GET /roles/{role_id}/groups][%d] roleGroupsBadRequest  %+v", 400, o.Payload)
}

func (o *RoleGroupsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RoleGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRoleGroupsNotFound creates a RoleGroupsNotFound with default headers values
func NewRoleGroupsNotFound() *RoleGroupsNotFound {
	return &RoleGroupsNotFound{}
}

/*RoleGroupsNotFound handles this case with default header values.

Not Found
*/
type RoleGroupsNotFound struct {
	Payload *models.Error
}

func (o *RoleGroupsNotFound) Error() string {
	return fmt.Sprintf("[GET /roles/{role_id}/groups][%d] roleGroupsNotFound  %+v", 404, o.Payload)
}

func (o *RoleGroupsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RoleGroupsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
