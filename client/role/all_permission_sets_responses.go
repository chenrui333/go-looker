// Code generated by go-swagger; DO NOT EDIT.

package role

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// AllPermissionSetsReader is a Reader for the AllPermissionSets structure.
type AllPermissionSetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AllPermissionSetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAllPermissionSetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAllPermissionSetsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAllPermissionSetsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAllPermissionSetsOK creates a AllPermissionSetsOK with default headers values
func NewAllPermissionSetsOK() *AllPermissionSetsOK {
	return &AllPermissionSetsOK{}
}

/*AllPermissionSetsOK handles this case with default header values.

Permission Set
*/
type AllPermissionSetsOK struct {
	Payload []*models.PermissionSet
}

func (o *AllPermissionSetsOK) Error() string {
	return fmt.Sprintf("[GET /permission_sets][%d] allPermissionSetsOK  %+v", 200, o.Payload)
}

func (o *AllPermissionSetsOK) GetPayload() []*models.PermissionSet {
	return o.Payload
}

func (o *AllPermissionSetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAllPermissionSetsBadRequest creates a AllPermissionSetsBadRequest with default headers values
func NewAllPermissionSetsBadRequest() *AllPermissionSetsBadRequest {
	return &AllPermissionSetsBadRequest{}
}

/*AllPermissionSetsBadRequest handles this case with default header values.

Bad Request
*/
type AllPermissionSetsBadRequest struct {
	Payload *models.Error
}

func (o *AllPermissionSetsBadRequest) Error() string {
	return fmt.Sprintf("[GET /permission_sets][%d] allPermissionSetsBadRequest  %+v", 400, o.Payload)
}

func (o *AllPermissionSetsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *AllPermissionSetsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAllPermissionSetsNotFound creates a AllPermissionSetsNotFound with default headers values
func NewAllPermissionSetsNotFound() *AllPermissionSetsNotFound {
	return &AllPermissionSetsNotFound{}
}

/*AllPermissionSetsNotFound handles this case with default header values.

Not Found
*/
type AllPermissionSetsNotFound struct {
	Payload *models.Error
}

func (o *AllPermissionSetsNotFound) Error() string {
	return fmt.Sprintf("[GET /permission_sets][%d] allPermissionSetsNotFound  %+v", 404, o.Payload)
}

func (o *AllPermissionSetsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *AllPermissionSetsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
