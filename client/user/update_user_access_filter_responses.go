// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// UpdateUserAccessFilterReader is a Reader for the UpdateUserAccessFilter structure.
type UpdateUserAccessFilterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateUserAccessFilterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateUserAccessFilterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateUserAccessFilterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUpdateUserAccessFilterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewUpdateUserAccessFilterUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateUserAccessFilterOK creates a UpdateUserAccessFilterOK with default headers values
func NewUpdateUserAccessFilterOK() *UpdateUserAccessFilterOK {
	return &UpdateUserAccessFilterOK{}
}

/*UpdateUserAccessFilterOK handles this case with default header values.

Access Filter
*/
type UpdateUserAccessFilterOK struct {
	Payload *models.AccessFilter
}

func (o *UpdateUserAccessFilterOK) Error() string {
	return fmt.Sprintf("[PATCH /users/{user_id}/access_filters/{access_filter_id}][%d] updateUserAccessFilterOK  %+v", 200, o.Payload)
}

func (o *UpdateUserAccessFilterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccessFilter)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserAccessFilterBadRequest creates a UpdateUserAccessFilterBadRequest with default headers values
func NewUpdateUserAccessFilterBadRequest() *UpdateUserAccessFilterBadRequest {
	return &UpdateUserAccessFilterBadRequest{}
}

/*UpdateUserAccessFilterBadRequest handles this case with default header values.

Bad Request
*/
type UpdateUserAccessFilterBadRequest struct {
	Payload *models.Error
}

func (o *UpdateUserAccessFilterBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /users/{user_id}/access_filters/{access_filter_id}][%d] updateUserAccessFilterBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateUserAccessFilterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserAccessFilterNotFound creates a UpdateUserAccessFilterNotFound with default headers values
func NewUpdateUserAccessFilterNotFound() *UpdateUserAccessFilterNotFound {
	return &UpdateUserAccessFilterNotFound{}
}

/*UpdateUserAccessFilterNotFound handles this case with default header values.

Not Found
*/
type UpdateUserAccessFilterNotFound struct {
	Payload *models.Error
}

func (o *UpdateUserAccessFilterNotFound) Error() string {
	return fmt.Sprintf("[PATCH /users/{user_id}/access_filters/{access_filter_id}][%d] updateUserAccessFilterNotFound  %+v", 404, o.Payload)
}

func (o *UpdateUserAccessFilterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserAccessFilterUnprocessableEntity creates a UpdateUserAccessFilterUnprocessableEntity with default headers values
func NewUpdateUserAccessFilterUnprocessableEntity() *UpdateUserAccessFilterUnprocessableEntity {
	return &UpdateUserAccessFilterUnprocessableEntity{}
}

/*UpdateUserAccessFilterUnprocessableEntity handles this case with default header values.

Validation Error
*/
type UpdateUserAccessFilterUnprocessableEntity struct {
	Payload *models.ValidationError
}

func (o *UpdateUserAccessFilterUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /users/{user_id}/access_filters/{access_filter_id}][%d] updateUserAccessFilterUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateUserAccessFilterUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
