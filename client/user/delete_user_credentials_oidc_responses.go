// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// DeleteUserCredentialsOidcReader is a Reader for the DeleteUserCredentialsOidc structure.
type DeleteUserCredentialsOidcReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUserCredentialsOidcReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteUserCredentialsOidcNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteUserCredentialsOidcBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteUserCredentialsOidcNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteUserCredentialsOidcNoContent creates a DeleteUserCredentialsOidcNoContent with default headers values
func NewDeleteUserCredentialsOidcNoContent() *DeleteUserCredentialsOidcNoContent {
	return &DeleteUserCredentialsOidcNoContent{}
}

/*DeleteUserCredentialsOidcNoContent handles this case with default header values.

Successfully deleted.
*/
type DeleteUserCredentialsOidcNoContent struct {
	Payload string
}

func (o *DeleteUserCredentialsOidcNoContent) Error() string {
	return fmt.Sprintf("[DELETE /users/{user_id}/credentials_oidc][%d] deleteUserCredentialsOidcNoContent  %+v", 204, o.Payload)
}

func (o *DeleteUserCredentialsOidcNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserCredentialsOidcBadRequest creates a DeleteUserCredentialsOidcBadRequest with default headers values
func NewDeleteUserCredentialsOidcBadRequest() *DeleteUserCredentialsOidcBadRequest {
	return &DeleteUserCredentialsOidcBadRequest{}
}

/*DeleteUserCredentialsOidcBadRequest handles this case with default header values.

Bad Request
*/
type DeleteUserCredentialsOidcBadRequest struct {
	Payload *models.Error
}

func (o *DeleteUserCredentialsOidcBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /users/{user_id}/credentials_oidc][%d] deleteUserCredentialsOidcBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteUserCredentialsOidcBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserCredentialsOidcNotFound creates a DeleteUserCredentialsOidcNotFound with default headers values
func NewDeleteUserCredentialsOidcNotFound() *DeleteUserCredentialsOidcNotFound {
	return &DeleteUserCredentialsOidcNotFound{}
}

/*DeleteUserCredentialsOidcNotFound handles this case with default header values.

Not Found
*/
type DeleteUserCredentialsOidcNotFound struct {
	Payload *models.Error
}

func (o *DeleteUserCredentialsOidcNotFound) Error() string {
	return fmt.Sprintf("[DELETE /users/{user_id}/credentials_oidc][%d] deleteUserCredentialsOidcNotFound  %+v", 404, o.Payload)
}

func (o *DeleteUserCredentialsOidcNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
