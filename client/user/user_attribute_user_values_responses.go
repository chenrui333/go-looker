// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// UserAttributeUserValuesReader is a Reader for the UserAttributeUserValues structure.
type UserAttributeUserValuesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserAttributeUserValuesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUserAttributeUserValuesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewUserAttributeUserValuesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUserAttributeUserValuesOK creates a UserAttributeUserValuesOK with default headers values
func NewUserAttributeUserValuesOK() *UserAttributeUserValuesOK {
	return &UserAttributeUserValuesOK{}
}

/*UserAttributeUserValuesOK handles this case with default header values.

Value of user attribute.
*/
type UserAttributeUserValuesOK struct {
	Payload []*models.UserAttributeWithValue
}

func (o *UserAttributeUserValuesOK) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}/attribute_values][%d] userAttributeUserValuesOK  %+v", 200, o.Payload)
}

func (o *UserAttributeUserValuesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserAttributeUserValuesNotFound creates a UserAttributeUserValuesNotFound with default headers values
func NewUserAttributeUserValuesNotFound() *UserAttributeUserValuesNotFound {
	return &UserAttributeUserValuesNotFound{}
}

/*UserAttributeUserValuesNotFound handles this case with default header values.

Not Found
*/
type UserAttributeUserValuesNotFound struct {
	Payload *models.Error
}

func (o *UserAttributeUserValuesNotFound) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}/attribute_values][%d] userAttributeUserValuesNotFound  %+v", 404, o.Payload)
}

func (o *UserAttributeUserValuesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
