// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// AllUserAccessFiltersReader is a Reader for the AllUserAccessFilters structure.
type AllUserAccessFiltersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AllUserAccessFiltersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAllUserAccessFiltersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAllUserAccessFiltersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewAllUserAccessFiltersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAllUserAccessFiltersOK creates a AllUserAccessFiltersOK with default headers values
func NewAllUserAccessFiltersOK() *AllUserAccessFiltersOK {
	return &AllUserAccessFiltersOK{}
}

/*AllUserAccessFiltersOK handles this case with default header values.

Access Filter
*/
type AllUserAccessFiltersOK struct {
	Payload []*models.AccessFilter
}

func (o *AllUserAccessFiltersOK) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}/access_filters][%d] allUserAccessFiltersOK  %+v", 200, o.Payload)
}

func (o *AllUserAccessFiltersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAllUserAccessFiltersBadRequest creates a AllUserAccessFiltersBadRequest with default headers values
func NewAllUserAccessFiltersBadRequest() *AllUserAccessFiltersBadRequest {
	return &AllUserAccessFiltersBadRequest{}
}

/*AllUserAccessFiltersBadRequest handles this case with default header values.

Bad Request
*/
type AllUserAccessFiltersBadRequest struct {
	Payload *models.Error
}

func (o *AllUserAccessFiltersBadRequest) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}/access_filters][%d] allUserAccessFiltersBadRequest  %+v", 400, o.Payload)
}

func (o *AllUserAccessFiltersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAllUserAccessFiltersNotFound creates a AllUserAccessFiltersNotFound with default headers values
func NewAllUserAccessFiltersNotFound() *AllUserAccessFiltersNotFound {
	return &AllUserAccessFiltersNotFound{}
}

/*AllUserAccessFiltersNotFound handles this case with default header values.

Not Found
*/
type AllUserAccessFiltersNotFound struct {
	Payload *models.Error
}

func (o *AllUserAccessFiltersNotFound) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}/access_filters][%d] allUserAccessFiltersNotFound  %+v", 404, o.Payload)
}

func (o *AllUserAccessFiltersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
