// Code generated by go-swagger; DO NOT EDIT.

package theme

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/chenrui333/go-looker/models"
)

// SearchThemesReader is a Reader for the SearchThemes structure.
type SearchThemesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchThemesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchThemesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchThemesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchThemesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSearchThemesOK creates a SearchThemesOK with default headers values
func NewSearchThemesOK() *SearchThemesOK {
	return &SearchThemesOK{}
}

/*SearchThemesOK handles this case with default header values.

Themes
*/
type SearchThemesOK struct {
	Payload []*models.Theme
}

func (o *SearchThemesOK) Error() string {
	return fmt.Sprintf("[GET /themes/search][%d] searchThemesOK  %+v", 200, o.Payload)
}

func (o *SearchThemesOK) GetPayload() []*models.Theme {
	return o.Payload
}

func (o *SearchThemesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchThemesBadRequest creates a SearchThemesBadRequest with default headers values
func NewSearchThemesBadRequest() *SearchThemesBadRequest {
	return &SearchThemesBadRequest{}
}

/*SearchThemesBadRequest handles this case with default header values.

Bad Request
*/
type SearchThemesBadRequest struct {
	Payload *models.Error
}

func (o *SearchThemesBadRequest) Error() string {
	return fmt.Sprintf("[GET /themes/search][%d] searchThemesBadRequest  %+v", 400, o.Payload)
}

func (o *SearchThemesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchThemesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchThemesNotFound creates a SearchThemesNotFound with default headers values
func NewSearchThemesNotFound() *SearchThemesNotFound {
	return &SearchThemesNotFound{}
}

/*SearchThemesNotFound handles this case with default header values.

Not Found
*/
type SearchThemesNotFound struct {
	Payload *models.Error
}

func (o *SearchThemesNotFound) Error() string {
	return fmt.Sprintf("[GET /themes/search][%d] searchThemesNotFound  %+v", 404, o.Payload)
}

func (o *SearchThemesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchThemesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
