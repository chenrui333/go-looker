// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// UserAttributeGroupValue user attribute group value
// swagger:model UserAttributeGroupValue
type UserAttributeGroupValue struct {

	// Operations the current user is able to perform on this object
	// Read Only: true
	Can map[string]bool `json:"can,omitempty"`

	// Id of group
	// Read Only: true
	GroupID int64 `json:"group_id,omitempty"`

	// Unique Id of this group-attribute relation
	// Read Only: true
	ID int64 `json:"id,omitempty"`

	// Precedence for resolving value for user
	// Read Only: true
	Rank int64 `json:"rank,omitempty"`

	// Id of user attribute
	// Read Only: true
	UserAttributeID int64 `json:"user_attribute_id,omitempty"`

	// Value of user attribute for group
	// Read Only: true
	Value string `json:"value,omitempty"`

	// If true, the "value" field will be null, because the attribute settings block access to this value
	// Read Only: true
	ValueIsHidden *bool `json:"value_is_hidden,omitempty"`
}

// Validate validates this user attribute group value
func (m *UserAttributeGroupValue) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UserAttributeGroupValue) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserAttributeGroupValue) UnmarshalBinary(b []byte) error {
	var res UserAttributeGroupValue
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
