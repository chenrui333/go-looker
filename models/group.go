// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// Group group
// swagger:model Group
type Group struct {

	// Operations the current user is able to perform on this object
	// Read Only: true
	Can map[string]bool `json:"can,omitempty"`

	// Group can be used in content access controls
	CanAddToContentMetadata bool `json:"can_add_to_content_metadata,omitempty"`

	// Currently logged in user is group member
	// Read Only: true
	ContainsCurrentUser *bool `json:"contains_current_user,omitempty"`

	// External Id group if embed group
	// Read Only: true
	ExternalGroupID string `json:"external_group_id,omitempty"`

	// Group membership controlled outside of Looker
	// Read Only: true
	ExternallyManaged *bool `json:"externally_managed,omitempty"`

	// Unique Id
	// Read Only: true
	ID int64 `json:"id,omitempty"`

	// New users are added to this group by default
	// Read Only: true
	IncludeByDefault *bool `json:"include_by_default,omitempty"`

	// Name of group
	Name string `json:"name,omitempty"`

	// Number of users included in this group
	// Read Only: true
	UserCount int64 `json:"user_count,omitempty"`
}

// Validate validates this group
func (m *Group) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Group) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Group) UnmarshalBinary(b []byte) error {
	var res Group
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
