// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// ContentView content view
// swagger:model ContentView
type ContentView struct {

	// Operations the current user is able to perform on this object
	// Read Only: true
	Can map[string]bool `json:"can,omitempty"`

	// Content metadata id of the Look or Dashboard
	// Read Only: true
	ContentMetadataID int64 `json:"content_metadata_id,omitempty"`

	// Id of the viewed Dashboard
	// Read Only: true
	DashboardID int64 `json:"dashboard_id,omitempty"`

	// Number of times piece of content was favorited
	// Read Only: true
	FavoriteCount int64 `json:"favorite_count,omitempty"`

	// Id of group content was viewed by
	// Read Only: true
	GroupID int64 `json:"group_id,omitempty"`

	// Unique Id
	// Read Only: true
	ID int64 `json:"id,omitempty"`

	// Date the piece of content was last viewed
	// Read Only: true
	LastViewedAt string `json:"last_viewed_at,omitempty"`

	// Id of viewed Look
	// Read Only: true
	LookID int64 `json:"look_id,omitempty"`

	// Week start date for the view and favorite count during that given week
	// Read Only: true
	StartOfWeekDate string `json:"start_of_week_date,omitempty"`

	// Id of user content was viewed by
	// Read Only: true
	UserID int64 `json:"user_id,omitempty"`

	// Number of times piece of content was viewed
	// Read Only: true
	ViewCount int64 `json:"view_count,omitempty"`
}

// Validate validates this content view
func (m *ContentView) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ContentView) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ContentView) UnmarshalBinary(b []byte) error {
	var res ContentView
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
