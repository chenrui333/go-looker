// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// DialectInfoOptions dialect info options
// swagger:model DialectInfoOptions
type DialectInfoOptions struct {

	// Has additional params support
	// Read Only: true
	AdditionalParams *bool `json:"additional_params,omitempty"`

	// Has auth support
	// Read Only: true
	Auth *bool `json:"auth,omitempty"`

	// Operations the current user is able to perform on this object
	// Read Only: true
	Can map[string]bool `json:"can,omitempty"`

	// Has host support
	// Read Only: true
	Host *bool `json:"host,omitempty"`

	// Has support for a service account
	// Read Only: true
	OauthCredentials *bool `json:"oauth_credentials,omitempty"`

	// Has project name support
	// Read Only: true
	ProjectName *bool `json:"project_name,omitempty"`

	// Has schema support
	// Read Only: true
	Schema *bool `json:"schema,omitempty"`

	// Has SSL support
	// Read Only: true
	Ssl *bool `json:"ssl,omitempty"`

	// Has timezone support
	// Read Only: true
	Timezone *bool `json:"timezone,omitempty"`

	// Has tmp table support
	// Read Only: true
	TmpTable *bool `json:"tmp_table,omitempty"`

	// Username is required
	// Read Only: true
	UsernameRequired *bool `json:"username_required,omitempty"`
}

// Validate validates this dialect info options
func (m *DialectInfoOptions) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DialectInfoOptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DialectInfoOptions) UnmarshalBinary(b []byte) error {
	var res DialectInfoOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
