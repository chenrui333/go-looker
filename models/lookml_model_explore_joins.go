// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// LookmlModelExploreJoins lookml model explore joins
// swagger:model LookmlModelExploreJoins
type LookmlModelExploreJoins struct {

	// Fields referenced by the join
	// Read Only: true
	DependentFields []string `json:"dependent_fields"`

	// Fields of the joined view to pull into this explore
	// Read Only: true
	Fields []string `json:"fields"`

	// Name of the dimension in this explore whose value is in the primary key of the joined view
	// Read Only: true
	ForeignKey string `json:"foreign_key,omitempty"`

	// Name of view to join
	// Read Only: true
	From string `json:"from,omitempty"`

	// Name of this join (and name of the view to join)
	// Read Only: true
	Name string `json:"name,omitempty"`

	// Specifies whether all queries must use an outer join
	// Read Only: true
	OuterOnly *bool `json:"outer_only,omitempty"`

	// many_to_one, one_to_one, one_to_many, many_to_many
	// Read Only: true
	Relationship string `json:"relationship,omitempty"`

	// Names of joins that must always be included in SQL queries
	// Read Only: true
	RequiredJoins []string `json:"required_joins"`

	// SQL expression that produces a foreign key
	// Read Only: true
	SQLForeignKey string `json:"sql_foreign_key,omitempty"`

	// SQL ON expression describing the join condition
	// Read Only: true
	SQLOn string `json:"sql_on,omitempty"`

	// SQL table name to join
	// Read Only: true
	SQLTableName string `json:"sql_table_name,omitempty"`

	// The join type: left_outer, full_outer, inner, or cross
	// Read Only: true
	Type string `json:"type,omitempty"`

	// Label to display in UI selectors
	// Read Only: true
	ViewLabel string `json:"view_label,omitempty"`
}

// Validate validates this lookml model explore joins
func (m *LookmlModelExploreJoins) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LookmlModelExploreJoins) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LookmlModelExploreJoins) UnmarshalBinary(b []byte) error {
	var res LookmlModelExploreJoins
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
